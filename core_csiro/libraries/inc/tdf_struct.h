/*
 * Copyright (c) 2020, Commonwealth Scientific and Industrial Research 
 * Organisation (CSIRO) ABN 41 687 119 230.
 *
 * Filename: tdf_struct.h
 *
 * Autogenerated by tdftool
 * 
 * DO NOT EDIT
 */

#ifndef __CORE_CSIRO_LIBRARIES_TDF_STRUCT
#define __CORE_CSIRO_LIBRARIES_TDF_STRUCT

/* Includes -------------------------------------------------*/

#include "compiler_intrinsics.h"

/* Module Defines -------------------------------------------*/

/* Type Definitions -----------------------------------------*/
// clang-format off

typedef struct tdf_battery_voltage {
    uint16_t voltage;  
} ATTR_PACKED tdf_battery_voltage_t;
#define TDF_BATTERY_VOLTAGE_SIZE sizeof(tdf_battery_voltage_t)

typedef struct tdf_battery_current {
    uint16_t current;  
} ATTR_PACKED tdf_battery_current_t;
#define TDF_BATTERY_CURRENT_SIZE sizeof(tdf_battery_current_t)

typedef struct tdf_solar_voltage {
    uint16_t voltage;  
} ATTR_PACKED tdf_solar_voltage_t;
#define TDF_SOLAR_VOLTAGE_SIZE sizeof(tdf_solar_voltage_t)

typedef struct tdf_solar_current {
    uint16_t current;  
} ATTR_PACKED tdf_solar_current_t;
#define TDF_SOLAR_CURRENT_SIZE sizeof(tdf_solar_current_t)

typedef struct tdf_cumulative_solar_current {
    uint16_t current;  
} ATTR_PACKED tdf_cumulative_solar_current_t;
#define TDF_CUMULATIVE_SOLAR_CURRENT_SIZE sizeof(tdf_cumulative_solar_current_t)

typedef struct tdf_onboard_temp {
    uint16_t temperature;  
} ATTR_PACKED tdf_onboard_temp_t;
#define TDF_ONBOARD_TEMP_SIZE sizeof(tdf_onboard_temp_t)

typedef struct tdf_raw_adc {
    uint16_t rawadc;  
} ATTR_PACKED tdf_raw_adc_t;
#define TDF_RAW_ADC_SIZE sizeof(tdf_raw_adc_t)

// ADC TDF
typedef struct tdf_raw_adc_n {
    uint8_t numsensors;  
    uint16_t adc0;  
    uint16_t adc1;  
    uint16_t adc2;  
} ATTR_PACKED tdf_raw_adc_n_t;
#define TDF_RAW_ADC_N_SIZE sizeof(tdf_raw_adc_n_t)

typedef struct tdf_datetime_ms {
    uint32_t datetime;  
    uint16_t ms;  
} ATTR_PACKED tdf_datetime_ms_t;
#define TDF_DATETIME_MS_SIZE sizeof(tdf_datetime_ms_t)

typedef struct tdf_datetime {
    uint32_t count;  
} ATTR_PACKED tdf_datetime_t;
#define TDF_DATETIME_SIZE sizeof(tdf_datetime_t)

typedef struct tdf_location_xyz {
    int32_t x;  
    int32_t y;  
    int32_t z;  
} ATTR_PACKED tdf_location_xyz_t;
#define TDF_LOCATION_XYZ_SIZE sizeof(tdf_location_xyz_t)

typedef struct tdf_location_xy32 {
    int32_t x;  
    int32_t y;  
} ATTR_PACKED tdf_location_xy32_t;
#define TDF_LOCATION_XY32_SIZE sizeof(tdf_location_xy32_t)

typedef struct tdf_location_xy16 {
    int16_t x;  
    int16_t y;  
} ATTR_PACKED tdf_location_xy16_t;
#define TDF_LOCATION_XY16_SIZE sizeof(tdf_location_xy16_t)

typedef struct tdf_app_version {
    uint8_t minor;  
    uint8_t major;  
} ATTR_PACKED tdf_app_version_t;
#define TDF_APP_VERSION_SIZE sizeof(tdf_app_version_t)

typedef struct tdf_bootloader_version {
    uint8_t minor;  
    uint8_t major;  
} ATTR_PACKED tdf_bootloader_version_t;
#define TDF_BOOTLOADER_VERSION_SIZE sizeof(tdf_bootloader_version_t)

typedef struct tdf_reset_count {
    uint8_t resetcount;  
} ATTR_PACKED tdf_reset_count_t;
#define TDF_RESET_COUNT_SIZE sizeof(tdf_reset_count_t)

typedef struct tdf_reason_for_last_reset {
    uint8_t resetcount;  
} ATTR_PACKED tdf_reason_for_last_reset_t;
#define TDF_REASON_FOR_LAST_RESET_SIZE sizeof(tdf_reason_for_last_reset_t)

typedef struct tdf_mac_rx_count {
    uint16_t countincrement;  
} ATTR_PACKED tdf_mac_rx_count_t;
#define TDF_MAC_RX_COUNT_SIZE sizeof(tdf_mac_rx_count_t)

typedef struct tdf_mac_tx_count {
    uint16_t countincrement;  
} ATTR_PACKED tdf_mac_tx_count_t;
#define TDF_MAC_TX_COUNT_SIZE sizeof(tdf_mac_tx_count_t)

typedef struct tdf_mac_rx_drop_count {
    uint16_t mac_rx_drop_count;  
} ATTR_PACKED tdf_mac_rx_drop_count_t;
#define TDF_MAC_RX_DROP_COUNT_SIZE sizeof(tdf_mac_rx_drop_count_t)

typedef struct tdf_mac_tx_err_count {
    uint16_t mac_tx_err_count;  
} ATTR_PACKED tdf_mac_tx_err_count_t;
#define TDF_MAC_TX_ERR_COUNT_SIZE sizeof(tdf_mac_tx_err_count_t)

typedef struct tdf_mac_tx_delay_mean {
    uint16_t mac_tx_delay_mean;  
} ATTR_PACKED tdf_mac_tx_delay_mean_t;
#define TDF_MAC_TX_DELAY_MEAN_SIZE sizeof(tdf_mac_tx_delay_mean_t)

typedef struct tdf_mac_tx_delay_max {
    uint16_t mac_tx_delay_max;  
} ATTR_PACKED tdf_mac_tx_delay_max_t;
#define TDF_MAC_TX_DELAY_MAX_SIZE sizeof(tdf_mac_tx_delay_max_t)

typedef struct tdf_mac_timeout_count {
    uint16_t mac_timeout_count;  
} ATTR_PACKED tdf_mac_timeout_count_t;
#define TDF_MAC_TIMEOUT_COUNT_SIZE sizeof(tdf_mac_timeout_count_t)

typedef struct tdf_mac_ack_timeout_count {
    uint16_t mac_ack_timeout_count;  
} ATTR_PACKED tdf_mac_ack_timeout_count_t;
#define TDF_MAC_ACK_TIMEOUT_COUNT_SIZE sizeof(tdf_mac_ack_timeout_count_t)

typedef struct tdf_mac_ack_err_count {
    uint16_t mac_ack_err_count;  
} ATTR_PACKED tdf_mac_ack_err_count_t;
#define TDF_MAC_ACK_ERR_COUNT_SIZE sizeof(tdf_mac_ack_err_count_t)

typedef struct tdf_nw_tx_qfull_count {
    uint16_t nw_tx_qfull_count;  
} ATTR_PACKED tdf_nw_tx_qfull_count_t;
#define TDF_NW_TX_QFULL_COUNT_SIZE sizeof(tdf_nw_tx_qfull_count_t)

typedef struct tdf_nw_rx_qfull_count {
    uint16_t nw_rx_qfull_count;  
} ATTR_PACKED tdf_nw_rx_qfull_count_t;
#define TDF_NW_RX_QFULL_COUNT_SIZE sizeof(tdf_nw_rx_qfull_count_t)

typedef struct tdf_nw_work_qfull_count {
    uint16_t nw_work_qfull_count;  
} ATTR_PACKED tdf_nw_work_qfull_count_t;
#define TDF_NW_WORK_QFULL_COUNT_SIZE sizeof(tdf_nw_work_qfull_count_t)

typedef struct tdf_nw_retry_count {
    uint16_t nw_retry_count;  
} ATTR_PACKED tdf_nw_retry_count_t;
#define TDF_NW_RETRY_COUNT_SIZE sizeof(tdf_nw_retry_count_t)

typedef struct tdf_nw_tx_drop_count {
    uint16_t nw_tx_drop_count;  
} ATTR_PACKED tdf_nw_tx_drop_count_t;
#define TDF_NW_TX_DROP_COUNT_SIZE sizeof(tdf_nw_tx_drop_count_t)

typedef struct tdf_nw_sync_lost_count {
    uint16_t nw_sync_lost_count;  
} ATTR_PACKED tdf_nw_sync_lost_count_t;
#define TDF_NW_SYNC_LOST_COUNT_SIZE sizeof(tdf_nw_sync_lost_count_t)

typedef struct tdf_nw_pkt_forward_count {
    uint16_t nw_pkt_forward_count;  
} ATTR_PACKED tdf_nw_pkt_forward_count_t;
#define TDF_NW_PKT_FORWARD_COUNT_SIZE sizeof(tdf_nw_pkt_forward_count_t)

typedef struct tdf_nw_nodeid {
    uint16_t nw_nodeid;  
} ATTR_PACKED tdf_nw_nodeid_t;
#define TDF_NW_NODEID_SIZE sizeof(tdf_nw_nodeid_t)

typedef struct tdf_nw_stats1 {
    uint16_t count;  
} ATTR_PACKED tdf_nw_stats1_t;
#define TDF_NW_STATS1_SIZE sizeof(tdf_nw_stats1_t)

typedef struct tdf_nw_stats2 {
    uint16_t nw_stats2;  
} ATTR_PACKED tdf_nw_stats2_t;
#define TDF_NW_STATS2_SIZE sizeof(tdf_nw_stats2_t)

typedef struct tdf_nw_stats3 {
    uint16_t nw_stats3;  
} ATTR_PACKED tdf_nw_stats3_t;
#define TDF_NW_STATS3_SIZE sizeof(tdf_nw_stats3_t)

typedef struct tdf_nw_bigseq {
    uint32_t nw_bigseq;  
} ATTR_PACKED tdf_nw_bigseq_t;
#define TDF_NW_BIGSEQ_SIZE sizeof(tdf_nw_bigseq_t)

typedef struct tdf_nw_acksends {
    uint16_t nw_acksends;  
} ATTR_PACKED tdf_nw_acksends_t;
#define TDF_NW_ACKSENDS_SIZE sizeof(tdf_nw_acksends_t)

typedef struct tdf_nw_txqual {
    uint8_t transmitquality;  
} ATTR_PACKED tdf_nw_txqual_t;
#define TDF_NW_TXQUAL_SIZE sizeof(tdf_nw_txqual_t)

typedef struct tdf_nw_rxqual {
    uint8_t receivequality;  
} ATTR_PACKED tdf_nw_rxqual_t;
#define TDF_NW_RXQUAL_SIZE sizeof(tdf_nw_rxqual_t)

typedef struct tdf_nw_hopcount {
    uint8_t hopcount;  
} ATTR_PACKED tdf_nw_hopcount_t;
#define TDF_NW_HOPCOUNT_SIZE sizeof(tdf_nw_hopcount_t)

typedef struct tdf_nw_nexthop {
    uint16_t parentnode;  
} ATTR_PACKED tdf_nw_nexthop_t;
#define TDF_NW_NEXTHOP_SIZE sizeof(tdf_nw_nexthop_t)

typedef struct tdf_nw_traceroute {
    uint8_t nw_traceroute[11];  
} ATTR_PACKED tdf_nw_traceroute_t;
#define TDF_NW_TRACEROUTE_SIZE sizeof(tdf_nw_traceroute_t)

typedef struct tdf_calibration_data {
    uint8_t calibration_data;  
} ATTR_PACKED tdf_calibration_data_t;
#define TDF_CALIBRATION_DATA_SIZE sizeof(tdf_calibration_data_t)

typedef struct tdf_moisture_echo_1 {
    uint16_t soilmoisture;  
} ATTR_PACKED tdf_moisture_echo_1_t;
#define TDF_MOISTURE_ECHO_1_SIZE sizeof(tdf_moisture_echo_1_t)

typedef struct tdf_moisture_echo_n {
    uint8_t moisture_echo_n[11];  
} ATTR_PACKED tdf_moisture_echo_n_t;
#define TDF_MOISTURE_ECHO_N_SIZE sizeof(tdf_moisture_echo_n_t)

typedef struct tdf_acc_xyz {
    uint16_t x;  
    uint16_t y;  
    uint16_t z;  
} ATTR_PACKED tdf_acc_xyz_t;
#define TDF_ACC_XYZ_SIZE sizeof(tdf_acc_xyz_t)

typedef struct tdf_mag_xyz {
    uint16_t x;  
    uint16_t y;  
    uint16_t z;  
} ATTR_PACKED tdf_mag_xyz_t;
#define TDF_MAG_XYZ_SIZE sizeof(tdf_mag_xyz_t)

typedef struct tdf_gyro_xyz {
    uint16_t x;  
    uint16_t y;  
    uint16_t z;  
} ATTR_PACKED tdf_gyro_xyz_t;
#define TDF_GYRO_XYZ_SIZE sizeof(tdf_gyro_xyz_t)

typedef struct tdf_water_ph {
    uint16_t water_ph;  
} ATTR_PACKED tdf_water_ph_t;
#define TDF_WATER_PH_SIZE sizeof(tdf_water_ph_t)

typedef struct tdf_water_redox {
    uint16_t water_redox;  
} ATTR_PACKED tdf_water_redox_t;
#define TDF_WATER_REDOX_SIZE sizeof(tdf_water_redox_t)

typedef struct tdf_water_do {
    uint16_t water_do;  
} ATTR_PACKED tdf_water_do_t;
#define TDF_WATER_DO_SIZE sizeof(tdf_water_do_t)

typedef struct tdf_water_temp {
    uint16_t water_temp;  
} ATTR_PACKED tdf_water_temp_t;
#define TDF_WATER_TEMP_SIZE sizeof(tdf_water_temp_t)

typedef struct tdf_water_ec {
    uint16_t water_ec;  
} ATTR_PACKED tdf_water_ec_t;
#define TDF_WATER_EC_SIZE sizeof(tdf_water_ec_t)

typedef struct tdf_water_turbidity {
    uint16_t water_turbidity;  
} ATTR_PACKED tdf_water_turbidity_t;
#define TDF_WATER_TURBIDITY_SIZE sizeof(tdf_water_turbidity_t)

typedef struct tdf_water_flow_rate {
    uint16_t water_flow_rate;  
} ATTR_PACKED tdf_water_flow_rate_t;
#define TDF_WATER_FLOW_RATE_SIZE sizeof(tdf_water_flow_rate_t)

typedef struct tdf_water_total_volume {
    uint32_t water_total_volume;  
} ATTR_PACKED tdf_water_total_volume_t;
#define TDF_WATER_TOTAL_VOLUME_SIZE sizeof(tdf_water_total_volume_t)

typedef struct tdf_water_pressure {
    uint16_t water_pressure;  
} ATTR_PACKED tdf_water_pressure_t;
#define TDF_WATER_PRESSURE_SIZE sizeof(tdf_water_pressure_t)

typedef struct tdf_water_depth {
    uint16_t water_depth;  
} ATTR_PACKED tdf_water_depth_t;
#define TDF_WATER_DEPTH_SIZE sizeof(tdf_water_depth_t)

typedef struct tdf_ad595_temp {
    uint16_t ad595_temp;  
} ATTR_PACKED tdf_ad595_temp_t;
#define TDF_AD595_TEMP_SIZE sizeof(tdf_ad595_temp_t)

typedef struct tdf_ds1626_temp {
    uint16_t ds1626_temp;  
} ATTR_PACKED tdf_ds1626_temp_t;
#define TDF_DS1626_TEMP_SIZE sizeof(tdf_ds1626_temp_t)

typedef struct tdf_ds1626_temp_n {
    uint8_t ds1626_temp_n[7];  
} ATTR_PACKED tdf_ds1626_temp_n_t;
#define TDF_DS1626_TEMP_N_SIZE sizeof(tdf_ds1626_temp_n_t)

typedef struct tdf_air_temp {
    uint16_t airtemperature;  
} ATTR_PACKED tdf_air_temp_t;
#define TDF_AIR_TEMP_SIZE sizeof(tdf_air_temp_t)

typedef struct tdf_air_humidity {
    uint16_t humidity;  
} ATTR_PACKED tdf_air_humidity_t;
#define TDF_AIR_HUMIDITY_SIZE sizeof(tdf_air_humidity_t)

typedef struct tdf_wind_speed {
    uint16_t windspeed;  
} ATTR_PACKED tdf_wind_speed_t;
#define TDF_WIND_SPEED_SIZE sizeof(tdf_wind_speed_t)

typedef struct tdf_wind_direction {
    uint16_t winddirection;  
} ATTR_PACKED tdf_wind_direction_t;
#define TDF_WIND_DIRECTION_SIZE sizeof(tdf_wind_direction_t)

typedef struct tdf_rainfall {
    uint16_t rainfall;  
} ATTR_PACKED tdf_rainfall_t;
#define TDF_RAINFALL_SIZE sizeof(tdf_rainfall_t)

typedef struct tdf_leaf_wetness {
    uint16_t leafwetness;  
} ATTR_PACKED tdf_leaf_wetness_t;
#define TDF_LEAF_WETNESS_SIZE sizeof(tdf_leaf_wetness_t)

typedef struct tdf_light_intensity_par {
    uint16_t light_intensity_par;  
} ATTR_PACKED tdf_light_intensity_par_t;
#define TDF_LIGHT_INTENSITY_PAR_SIZE sizeof(tdf_light_intensity_par_t)

typedef struct tdf_multi_spectral_array {
    uint16_t ms550up;  
    uint16_t ms660up;  
    uint16_t ms830up;  
    uint16_t ms1050up;  
    uint16_t ms550down;  
    uint16_t ms660down;  
    uint16_t ms830down;  
    uint16_t ms1050down;  
} ATTR_PACKED tdf_multi_spectral_array_t;
#define TDF_MULTI_SPECTRAL_ARRAY_SIZE sizeof(tdf_multi_spectral_array_t)

typedef struct tdf_pir_count {
    uint16_t count;  
} ATTR_PACKED tdf_pir_count_t;
#define TDF_PIR_COUNT_SIZE sizeof(tdf_pir_count_t)

typedef struct tdf_packet_id {
    uint32_t countincrement;  
} ATTR_PACKED tdf_packet_id_t;
#define TDF_PACKET_ID_SIZE sizeof(tdf_packet_id_t)

typedef struct tdf_gps_lat_long {
    uint64_t gps_lat_long;  
} ATTR_PACKED tdf_gps_lat_long_t;
#define TDF_GPS_LAT_LONG_SIZE sizeof(tdf_gps_lat_long_t)

typedef struct tdf_gps_northing_easting {
    uint32_t easting;  
    uint32_t northing;  
} ATTR_PACKED tdf_gps_northing_easting_t;
#define TDF_GPS_NORTHING_EASTING_SIZE sizeof(tdf_gps_northing_easting_t)

typedef struct tdf_gps_height_above_ellipsoid {
    uint16_t gps_height_above_ellipsoid;  
} ATTR_PACKED tdf_gps_height_above_ellipsoid_t;
#define TDF_GPS_HEIGHT_ABOVE_ELLIPSOID_SIZE sizeof(tdf_gps_height_above_ellipsoid_t)

typedef struct tdf_gps_time_of_week {
    uint32_t gps_time_of_week;  
} ATTR_PACKED tdf_gps_time_of_week_t;
#define TDF_GPS_TIME_OF_WEEK_SIZE sizeof(tdf_gps_time_of_week_t)

typedef struct tdf_gps_week {
    uint16_t gps_week;  
} ATTR_PACKED tdf_gps_week_t;
#define TDF_GPS_WEEK_SIZE sizeof(tdf_gps_week_t)

typedef struct tdf_gps_num_satellites {
    uint8_t gps_num_satellites;  
} ATTR_PACKED tdf_gps_num_satellites_t;
#define TDF_GPS_NUM_SATELLITES_SIZE sizeof(tdf_gps_num_satellites_t)

typedef struct tdf_gps_horz_accuracy {
    uint16_t gps_horz_accuracy;  
} ATTR_PACKED tdf_gps_horz_accuracy_t;
#define TDF_GPS_HORZ_ACCURACY_SIZE sizeof(tdf_gps_horz_accuracy_t)

typedef struct tdf_gps_vert_accuracy {
    uint16_t gps_vert_accuracy;  
} ATTR_PACKED tdf_gps_vert_accuracy_t;
#define TDF_GPS_VERT_ACCURACY_SIZE sizeof(tdf_gps_vert_accuracy_t)

typedef struct tdf_gps_dop {
    uint16_t gps_dop;  
} ATTR_PACKED tdf_gps_dop_t;
#define TDF_GPS_DOP_SIZE sizeof(tdf_gps_dop_t)

typedef struct tdf_gps_signal_strength {
    uint16_t gps_signal_strength;  
} ATTR_PACKED tdf_gps_signal_strength_t;
#define TDF_GPS_SIGNAL_STRENGTH_SIZE sizeof(tdf_gps_signal_strength_t)

typedef struct tdf_gps_signal_quality {
    uint16_t gps_signal_quality;  
} ATTR_PACKED tdf_gps_signal_quality_t;
#define TDF_GPS_SIGNAL_QUALITY_SIZE sizeof(tdf_gps_signal_quality_t)

typedef struct tdf_gps_hmsl {
    uint16_t count;  
} ATTR_PACKED tdf_gps_hmsl_t;
#define TDF_GPS_HMSL_SIZE sizeof(tdf_gps_hmsl_t)

typedef struct tdf_load_cell {
    uint16_t load_cell;  
} ATTR_PACKED tdf_load_cell_t;
#define TDF_LOAD_CELL_SIZE sizeof(tdf_load_cell_t)

typedef struct tdf_tag_reader {
    uint8_t tag_reader[7];  
} ATTR_PACKED tdf_tag_reader_t;
#define TDF_TAG_READER_SIZE sizeof(tdf_tag_reader_t)

typedef struct tdf_zap_duration {
    uint16_t zap_duration;  
} ATTR_PACKED tdf_zap_duration_t;
#define TDF_ZAP_DURATION_SIZE sizeof(tdf_zap_duration_t)

typedef struct tdf_zap_intensity {
    uint16_t zap_intensity;  
} ATTR_PACKED tdf_zap_intensity_t;
#define TDF_ZAP_INTENSITY_SIZE sizeof(tdf_zap_intensity_t)

typedef struct tdf_zap_count {
    uint16_t count;  
} ATTR_PACKED tdf_zap_count_t;
#define TDF_ZAP_COUNT_SIZE sizeof(tdf_zap_count_t)

typedef struct tdf_audio_count {
    uint16_t count;  
} ATTR_PACKED tdf_audio_count_t;
#define TDF_AUDIO_COUNT_SIZE sizeof(tdf_audio_count_t)

typedef struct tdf_fence_line {
    uint64_t fence_line;  
} ATTR_PACKED tdf_fence_line_t;
#define TDF_FENCE_LINE_SIZE sizeof(tdf_fence_line_t)

typedef struct tdf_vf_flags {
    uint8_t count;  
} ATTR_PACKED tdf_vf_flags_t;
#define TDF_VF_FLAGS_SIZE sizeof(tdf_vf_flags_t)

typedef struct tdf_floor_num {
    uint8_t floor_num;  
} ATTR_PACKED tdf_floor_num_t;
#define TDF_FLOOR_NUM_SIZE sizeof(tdf_floor_num_t)

typedef struct tdf_pedometry_count {
    uint16_t pedometry_count;  
} ATTR_PACKED tdf_pedometry_count_t;
#define TDF_PEDOMETRY_COUNT_SIZE sizeof(tdf_pedometry_count_t)

typedef struct tdf_data_transfer {
    uint8_t data_transfer[13];  
} ATTR_PACKED tdf_data_transfer_t;
#define TDF_DATA_TRANSFER_SIZE sizeof(tdf_data_transfer_t)

typedef struct tdf_ir_range {
    uint16_t adc5;  
    uint16_t adc6;  
    uint16_t adc7;  
} ATTR_PACKED tdf_ir_range_t;
#define TDF_IR_RANGE_SIZE sizeof(tdf_ir_range_t)

typedef struct tdf_temp_string {
    int16_t one;  
    int16_t two;  
    int16_t three;  
    int16_t four;  
    int16_t five;  
    int16_t six;  
} ATTR_PACKED tdf_temp_string_t;
#define TDF_TEMP_STRING_SIZE sizeof(tdf_temp_string_t)

typedef struct tdf_beacon {
    uint8_t dio;  
} ATTR_PACKED tdf_beacon_t;
#define TDF_BEACON_SIZE sizeof(tdf_beacon_t)

typedef struct tdf_solar_charge {
    uint8_t solarcharging;  
} ATTR_PACKED tdf_solar_charge_t;
#define TDF_SOLAR_CHARGE_SIZE sizeof(tdf_solar_charge_t)

typedef struct tdf_power_sensorhub_ups_source {
    uint8_t count;  
} ATTR_PACKED tdf_power_sensorhub_ups_source_t;
#define TDF_POWER_SENSORHUB_UPS_SOURCE_SIZE sizeof(tdf_power_sensorhub_ups_source_t)

typedef struct tdf_power_sensorhub_ups_battery_volts {
    uint16_t voltage;  
} ATTR_PACKED tdf_power_sensorhub_ups_battery_volts_t;
#define TDF_POWER_SENSORHUB_UPS_BATTERY_VOLTS_SIZE sizeof(tdf_power_sensorhub_ups_battery_volts_t)

typedef struct tdf_sensorhub_num_cmd {
    uint16_t count;  
} ATTR_PACKED tdf_sensorhub_num_cmd_t;
#define TDF_SENSORHUB_NUM_CMD_SIZE sizeof(tdf_sensorhub_num_cmd_t)

typedef struct tdf_sensorhub_num_mutex_fail {
    uint16_t sensorhub_num_mutex_fail;  
} ATTR_PACKED tdf_sensorhub_num_mutex_fail_t;
#define TDF_SENSORHUB_NUM_MUTEX_FAIL_SIZE sizeof(tdf_sensorhub_num_mutex_fail_t)

typedef struct tdf_sensorhub_num_serial_retry {
    uint16_t sensorhub_num_serial_retry;  
} ATTR_PACKED tdf_sensorhub_num_serial_retry_t;
#define TDF_SENSORHUB_NUM_SERIAL_RETRY_SIZE sizeof(tdf_sensorhub_num_serial_retry_t)

typedef struct tdf_sensorhub_num_serial_fail {
    uint16_t sensorhub_num_serial_fail;  
} ATTR_PACKED tdf_sensorhub_num_serial_fail_t;
#define TDF_SENSORHUB_NUM_SERIAL_FAIL_SIZE sizeof(tdf_sensorhub_num_serial_fail_t)

typedef struct tdf_sensorhub_num_rpc_fail {
    uint16_t sensorhub_num_rpc_fail;  
} ATTR_PACKED tdf_sensorhub_num_rpc_fail_t;
#define TDF_SENSORHUB_NUM_RPC_FAIL_SIZE sizeof(tdf_sensorhub_num_rpc_fail_t)

typedef struct tdf_temp_sensirion_sht15 {
    uint16_t airtemperature;  
} ATTR_PACKED tdf_temp_sensirion_sht15_t;
#define TDF_TEMP_SENSIRION_SHT15_SIZE sizeof(tdf_temp_sensirion_sht15_t)

typedef struct tdf_temp_rotronic_hygroclip2 {
    uint32_t airtemperature;  
} ATTR_PACKED tdf_temp_rotronic_hygroclip2_t;
#define TDF_TEMP_ROTRONIC_HYGROCLIP2_SIZE sizeof(tdf_temp_rotronic_hygroclip2_t)

typedef struct tdf_temp_kfs140_custom {
    uint16_t airtemperature;  
} ATTR_PACKED tdf_temp_kfs140_custom_t;
#define TDF_TEMP_KFS140_CUSTOM_SIZE sizeof(tdf_temp_kfs140_custom_t)

typedef struct tdf_temp_maxim_ibutton {
    uint16_t temp_maxim_ibutton;  
} ATTR_PACKED tdf_temp_maxim_ibutton_t;
#define TDF_TEMP_MAXIM_IBUTTON_SIZE sizeof(tdf_temp_maxim_ibutton_t)

typedef struct tdf_humid_sensirion_sht15 {
    uint16_t humidity;  
} ATTR_PACKED tdf_humid_sensirion_sht15_t;
#define TDF_HUMID_SENSIRION_SHT15_SIZE sizeof(tdf_humid_sensirion_sht15_t)

typedef struct tdf_humid_rotronic_hygroclip2 {
    uint32_t humidity;  
} ATTR_PACKED tdf_humid_rotronic_hygroclip2_t;
#define TDF_HUMID_ROTRONIC_HYGROCLIP2_SIZE sizeof(tdf_humid_rotronic_hygroclip2_t)

typedef struct tdf_humid_kfs140_custom {
    uint16_t humidity;  
} ATTR_PACKED tdf_humid_kfs140_custom_t;
#define TDF_HUMID_KFS140_CUSTOM_SIZE sizeof(tdf_humid_kfs140_custom_t)

typedef struct tdf_humid_maxim_ibutton {
    uint16_t humid_maxim_ibutton;  
} ATTR_PACKED tdf_humid_maxim_ibutton_t;
#define TDF_HUMID_MAXIM_IBUTTON_SIZE sizeof(tdf_humid_maxim_ibutton_t)

typedef struct tdf_soil_decagon_ec5 {
    uint32_t soilmoisture;  
} ATTR_PACKED tdf_soil_decagon_ec5_t;
#define TDF_SOIL_DECAGON_EC5_SIZE sizeof(tdf_soil_decagon_ec5_t)

typedef struct tdf_soil_decagon_ec20 {
    uint32_t soilmoisture;  
} ATTR_PACKED tdf_soil_decagon_ec20_t;
#define TDF_SOIL_DECAGON_EC20_SIZE sizeof(tdf_soil_decagon_ec20_t)

typedef struct tdf_soil_decagon_10hs {
    uint32_t soilmoisture;  
} ATTR_PACKED tdf_soil_decagon_10hs_t;
#define TDF_SOIL_DECAGON_10HS_SIZE sizeof(tdf_soil_decagon_10hs_t)

typedef struct tdf_soil_decagon_mps1 {
    uint32_t rawadc;  
} ATTR_PACKED tdf_soil_decagon_mps1_t;
#define TDF_SOIL_DECAGON_MPS1_SIZE sizeof(tdf_soil_decagon_mps1_t)

typedef struct tdf_soil_decagon_ectm {
    uint16_t vwc;  
    uint16_t ec;  
    uint16_t temp;  
} ATTR_PACKED tdf_soil_decagon_ectm_t;
#define TDF_SOIL_DECAGON_ECTM_SIZE sizeof(tdf_soil_decagon_ectm_t)

typedef struct tdf_soil_decagon_5te {
    uint16_t vwc;  
    uint16_t ec;  
    uint16_t temp;  
} ATTR_PACKED tdf_soil_decagon_5te_t;
#define TDF_SOIL_DECAGON_5TE_SIZE sizeof(tdf_soil_decagon_5te_t)

typedef struct tdf_light_apogee_sq110 {
    uint32_t photosyntheticallyactiveradiation;  
} ATTR_PACKED tdf_light_apogee_sq110_t;
#define TDF_LIGHT_APOGEE_SQ110_SIZE sizeof(tdf_light_apogee_sq110_t)

typedef struct tdf_light_apogee_sp110 {
    uint32_t solarradiation;  
} ATTR_PACKED tdf_light_apogee_sp110_t;
#define TDF_LIGHT_APOGEE_SP110_SIZE sizeof(tdf_light_apogee_sp110_t)

typedef struct tdf_light_middleton_sk01dp2 {
    uint32_t photosyntheticallyactiveradiation;  
} ATTR_PACKED tdf_light_middleton_sk01dp2_t;
#define TDF_LIGHT_MIDDLETON_SK01DP2_SIZE sizeof(tdf_light_middleton_sk01dp2_t)

typedef struct tdf_light_middleton_sk08 {
    uint32_t solarradiation;  
} ATTR_PACKED tdf_light_middleton_sk08_t;
#define TDF_LIGHT_MIDDLETON_SK08_SIZE sizeof(tdf_light_middleton_sk08_t)

typedef struct tdf_leafwet_decagon_lws {
    uint32_t leafwetness;  
} ATTR_PACKED tdf_leafwet_decagon_lws_t;
#define TDF_LEAFWET_DECAGON_LWS_SIZE sizeof(tdf_leafwet_decagon_lws_t)

typedef struct tdf_wind_direction_metone_034b {
    uint32_t winddirection;  
} ATTR_PACKED tdf_wind_direction_metone_034b_t;
#define TDF_WIND_DIRECTION_METONE_034B_SIZE sizeof(tdf_wind_direction_metone_034b_t)

typedef struct tdf_wind_speed_metone_034b {
    uint32_t windspeed;  
} ATTR_PACKED tdf_wind_speed_metone_034b_t;
#define TDF_WIND_SPEED_METONE_034B_SIZE sizeof(tdf_wind_speed_metone_034b_t)

typedef struct tdf_wind_direction_vaisala_wxt520 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_direction_vaisala_wxt520_t;
#define TDF_WIND_DIRECTION_VAISALA_WXT520_SIZE sizeof(tdf_wind_direction_vaisala_wxt520_t)

typedef struct tdf_wind_speed_vaisala_wxt520 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_speed_vaisala_wxt520_t;
#define TDF_WIND_SPEED_VAISALA_WXT520_SIZE sizeof(tdf_wind_speed_vaisala_wxt520_t)

typedef struct tdf_ptu_vaisala_wxt520 {
    float temp;  
    float humidity;  
    float pressure;  
} ATTR_PACKED tdf_ptu_vaisala_wxt520_t;
#define TDF_PTU_VAISALA_WXT520_SIZE sizeof(tdf_ptu_vaisala_wxt520_t)

typedef struct tdf_rain_vaisala_wxt520 {
    float accum;  
    float duration;  
    float peakintensity;  
} ATTR_PACKED tdf_rain_vaisala_wxt520_t;
#define TDF_RAIN_VAISALA_WXT520_SIZE sizeof(tdf_rain_vaisala_wxt520_t)

typedef struct tdf_hail_vaisala_wxt520 {
    float accum;  
    float duration;  
    float peakintensity;  
} ATTR_PACKED tdf_hail_vaisala_wxt520_t;
#define TDF_HAIL_VAISALA_WXT520_SIZE sizeof(tdf_hail_vaisala_wxt520_t)

typedef struct tdf_lpl_sleep_stats {
    uint32_t sleeps;  
    uint32_t aborted;  
} ATTR_PACKED tdf_lpl_sleep_stats_t;
#define TDF_LPL_SLEEP_STATS_SIZE sizeof(tdf_lpl_sleep_stats_t)

typedef struct tdf_wind_direction_metone_034b_v2 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_direction_metone_034b_v2_t;
#define TDF_WIND_DIRECTION_METONE_034B_V2_SIZE sizeof(tdf_wind_direction_metone_034b_v2_t)

typedef struct tdf_wind_speed_metone_034b_v2 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_speed_metone_034b_v2_t;
#define TDF_WIND_SPEED_METONE_034B_V2_SIZE sizeof(tdf_wind_speed_metone_034b_v2_t)

typedef struct tdf_precip_reset_vaisala_wxt520 {
    uint8_t precip_reset_vaisala_wxt520;  
} ATTR_PACKED tdf_precip_reset_vaisala_wxt520_t;
#define TDF_PRECIP_RESET_VAISALA_WXT520_SIZE sizeof(tdf_precip_reset_vaisala_wxt520_t)

typedef struct tdf_soil_moisture_spade {
    uint32_t soil_moisture_spade;  
} ATTR_PACKED tdf_soil_moisture_spade_t;
#define TDF_SOIL_MOISTURE_SPADE_SIZE sizeof(tdf_soil_moisture_spade_t)

typedef struct tdf_soil_temp_spade {
    uint32_t soil_temp_spade;  
} ATTR_PACKED tdf_soil_temp_spade_t;
#define TDF_SOIL_TEMP_SPADE_SIZE sizeof(tdf_soil_temp_spade_t)

typedef struct tdf_network_at86rf212_stats {
    uint16_t nsleepattempts;  
    uint8_t nsleeperror;  
    uint16_t nidleattempts;  
    uint8_t nidleerror;  
    uint16_t nwakeupattempts;  
    uint8_t nwakeuperror;  
    uint16_t nsendattempts;  
    uint16_t nsendcomplete;  
    uint16_t nsendbusy;  
    uint8_t nsenderror;  
    uint16_t nccaattempts;  
    uint16_t nccafree;  
    uint16_t nccabusy;  
    uint8_t nccaerror;  
    uint32_t nreceive;  
    uint16_t nreceivedropcrcerror;  
    uint16_t nreceivedropcongestion;  
    uint8_t nunexpectedinterrupt;  
} ATTR_PACKED tdf_network_at86rf212_stats_t;
#define TDF_NETWORK_AT86RF212_STATS_SIZE sizeof(tdf_network_at86rf212_stats_t)

typedef struct tdf_network_xmac_stats {
    uint32_t ndutycycle;  
    uint32_t ndutycycleradiooff;  
    uint16_t nsendattempts;  
    uint16_t nsendbusy;  
    uint8_t nsenderrors;  
    uint16_t nsendnoack;  
    uint16_t nsendretries;  
    uint32_t nccaattempts;  
    uint16_t nccabusy;  
    uint8_t nccaerrors;  
    uint32_t ntxstrobeattempts;  
    uint16_t ntxstrobebusy;  
    uint8_t ntxstrobeerrors;  
    uint16_t ntxdataattempts;  
    uint16_t ntxdatabusy;  
    uint8_t ntxdataerrors;  
    uint16_t ntxstrobeackattempts;  
    uint16_t ntxstrobeackbusy;  
    uint8_t ntxstrobeackerrors;  
    uint16_t ntxdataackattempts;  
    uint16_t ntxdataackbusy;  
    uint8_t ntxdataackerrors;  
    uint16_t nrxstrobe;  
    uint16_t nrxdata;  
    uint16_t nrxstrobeack;  
    uint16_t nrxdataack;  
    uint16_t nrxstrobeacktimeout;  
    uint16_t nrxdataacktimeout;  
    uint16_t nrxdatadropped;  
    uint16_t nstrobingperiodtimeout;  
    uint16_t ncollisions;  
} ATTR_PACKED tdf_network_xmac_stats_t;
#define TDF_NETWORK_XMAC_STATS_SIZE sizeof(tdf_network_xmac_stats_t)

typedef struct tdf_network_dispatcher_stats {
    uint32_t nmacrx;  
    uint16_t nrxdropnosubscriber;  
    uint16_t nrxdropcongestion;  
    uint16_t nurgenttxcongestion;  
    uint32_t nurgentmactx;  
    uint16_t nurgentmactxerr;  
    uint8_t nurgentmactxerrfatal;  
    uint16_t ntxcongestion;  
    uint32_t nmactx;  
    uint16_t nmactxerr;  
    uint8_t nmactxerrfatal;  
} ATTR_PACKED tdf_network_dispatcher_stats_t;
#define TDF_NETWORK_DISPATCHER_STATS_SIZE sizeof(tdf_network_dispatcher_stats_t)

typedef struct tdf_network_flooding_stats {
    uint16_t mem;  
    uint16_t nsendlocalattempts;  
    uint16_t nsendlocalsuccess;  
    uint16_t nsendlocalbusy;  
    uint8_t nsendlocalerror;  
    uint16_t nsendfwdattempts;  
    uint16_t nsendfwdsuccess;  
    uint16_t nsendfwdbusy;  
    uint8_t nsendfwderror;  
    uint16_t nreceive;  
    uint16_t nreceiveforus;  
    uint16_t nreceiveerror;  
} ATTR_PACKED tdf_network_flooding_stats_t;
#define TDF_NETWORK_FLOODING_STATS_SIZE sizeof(tdf_network_flooding_stats_t)

typedef struct tdf_network_ctp_stats {
    uint16_t mem;  
    uint16_t nsendlocaldata;  
    uint8_t nsendlocaldataerror;  
    uint16_t nrxdata;  
    uint8_t nrxdataerror;  
    uint16_t nforwarddatadropcongestion;  
    uint16_t nforwarddatadropnoparent;  
    uint16_t nforwarddatadropduplication;  
    uint16_t nrxbeacon;  
    uint8_t nrxbeaconerror;  
    uint16_t ntxdatacomplete;  
    uint8_t ntxdatafailed;  
    uint16_t nparentchange;  
    uint16_t nbeaconsend;  
    uint8_t nbeaconsenderror;  
    uint16_t nbeaconresets;  
} ATTR_PACKED tdf_network_ctp_stats_t;
#define TDF_NETWORK_CTP_STATS_SIZE sizeof(tdf_network_ctp_stats_t)

typedef struct tdf_network_ctp_state {
    uint16_t etx;  
    uint16_t parentaddr;  
    uint8_t nneighbour;  
    uint16_t n1addr;  
    uint16_t n1linketx;  
    uint16_t n2addr;  
    uint16_t n2linketx;  
    uint16_t n3addr;  
    uint16_t n3linketx;  
    uint16_t n4addr;  
    uint16_t n4linketx;  
    uint16_t n5addr;  
    uint16_t n5linketx;  
    uint16_t n6addr;  
    uint16_t n6linketx;  
    uint16_t n7addr;  
    uint16_t n7linketx;  
    uint16_t n8addr;  
    uint16_t n8linketx;  
    uint16_t n9addr;  
    uint16_t n9linketx;  
    uint16_t n10addr;  
    uint16_t n10linketx;  
    uint16_t n11addr;  
    uint16_t n11linketx;  
    uint16_t n12addr;  
    uint16_t n12linketx;  
    uint16_t n13addr;  
    uint16_t n13linketx;  
    uint16_t n14addr;  
    uint16_t n14linketx;  
    uint16_t n15addr;  
    uint16_t n15linketx;  
} ATTR_PACKED tdf_network_ctp_state_t;
#define TDF_NETWORK_CTP_STATE_SIZE sizeof(tdf_network_ctp_state_t)

typedef struct tdf_temp_microchip_mcp9800 {
    float temp;  
} ATTR_PACKED tdf_temp_microchip_mcp9800_t;
#define TDF_TEMP_MICROCHIP_MCP9800_SIZE sizeof(tdf_temp_microchip_mcp9800_t)

typedef struct tdf_power_source {
    uint16_t count;  
} ATTR_PACKED tdf_power_source_t;
#define TDF_POWER_SOURCE_SIZE sizeof(tdf_power_source_t)

typedef struct tdf_battery_voltage_ups {
    uint16_t voltage;  
} ATTR_PACKED tdf_battery_voltage_ups_t;
#define TDF_BATTERY_VOLTAGE_UPS_SIZE sizeof(tdf_battery_voltage_ups_t)

typedef struct tdf_battery_charge_status {
    uint16_t dio;  
} ATTR_PACKED tdf_battery_charge_status_t;
#define TDF_BATTERY_CHARGE_STATUS_SIZE sizeof(tdf_battery_charge_status_t)

typedef struct tdf_system_info {
    uint16_t deploymentid;  
    uint8_t radiochannel;  
    uint8_t radiotxpower;  
    uint32_t grenadeperiod;  
    int32_t locationeasting;  
    int32_t locationnorthing;  
    uint16_t appversion;  
    uint8_t xmacshorttimer;  
    uint8_t xmacdutycycleperiodms;  
    uint8_t xmacdutycycleawakems;  
    uint16_t xmacstrobeacktimeoutus;  
    uint16_t xmacdataacktimeoutus;  
    uint8_t xmacnumretries;  
    uint8_t xmacflags;  
    uint8_t dispatchertxqueuelen;  
    uint8_t dispatcherurgenttxqueuelen;  
    uint8_t dispatchermaxsubscribers;  
    uint16_t dispatcherinterpacketdelayms;  
    uint8_t ctpflags;  
    uint8_t ctpforwardqueuelen;  
    uint8_t ctplocalqueuelen;  
    uint8_t ctptxcachelen;  
    uint8_t ctpneighbourtablelen;  
    uint16_t floodingnexthop;  
    uint8_t floodingttl;  
    uint8_t floodingcachelen;  
    uint8_t lastresetmcusr;  
    uint16_t freemem;  
    uint32_t time;  
    uint32_t grenadecount;  
} ATTR_PACKED tdf_system_info_t;
#define TDF_SYSTEM_INFO_SIZE sizeof(tdf_system_info_t)

typedef struct tdf_system_app_name {
    uint8_t system_app_name[16];  
} ATTR_PACKED tdf_system_app_name_t;
#define TDF_SYSTEM_APP_NAME_SIZE sizeof(tdf_system_app_name_t)

typedef struct tdf_system_app_version {
    uint16_t count;  
} ATTR_PACKED tdf_system_app_version_t;
#define TDF_SYSTEM_APP_VERSION_SIZE sizeof(tdf_system_app_version_t)

typedef struct tdf_soil_decagon_5te_v2 {
    float vwc;  
    float ec;  
    float temp;  
} ATTR_PACKED tdf_soil_decagon_5te_v2_t;
#define TDF_SOIL_DECAGON_5TE_V2_SIZE sizeof(tdf_soil_decagon_5te_v2_t)

typedef struct tdf_temp_humid_sensirion_sht15 {
    float temp;  
    float humid;  
    uint16_t tempraw;  
    uint16_t humidraw;  
} ATTR_PACKED tdf_temp_humid_sensirion_sht15_t;
#define TDF_TEMP_HUMID_SENSIRION_SHT15_SIZE sizeof(tdf_temp_humid_sensirion_sht15_t)

typedef struct tdf_temp_humid_sensirion_sht15_high {
    float temp;  
    float humid;  
    uint16_t tempraw;  
    uint16_t humidraw;  
} ATTR_PACKED tdf_temp_humid_sensirion_sht15_high_t;
#define TDF_TEMP_HUMID_SENSIRION_SHT15_HIGH_SIZE sizeof(tdf_temp_humid_sensirion_sht15_high_t)

typedef struct tdf_temp_apogee_st100 {
    uint32_t temperature;  
} ATTR_PACKED tdf_temp_apogee_st100_t;
#define TDF_TEMP_APOGEE_ST100_SIZE sizeof(tdf_temp_apogee_st100_t)

typedef struct tdf_temp_apogee_st100_high {
    uint32_t airtemperature;  
} ATTR_PACKED tdf_temp_apogee_st100_high_t;
#define TDF_TEMP_APOGEE_ST100_HIGH_SIZE sizeof(tdf_temp_apogee_st100_high_t)

typedef struct tdf_temp_apogee_st100_ground {
    uint32_t airtemperature;  
} ATTR_PACKED tdf_temp_apogee_st100_ground_t;
#define TDF_TEMP_APOGEE_ST100_GROUND_SIZE sizeof(tdf_temp_apogee_st100_ground_t)

typedef struct tdf_temp_apogee_st100_soil {
    uint32_t temp_apogee_st100_soil;  
} ATTR_PACKED tdf_temp_apogee_st100_soil_t;
#define TDF_TEMP_APOGEE_ST100_SOIL_SIZE sizeof(tdf_temp_apogee_st100_soil_t)

typedef struct tdf_dendrometer_ict_dr26 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_t;
#define TDF_DENDROMETER_ICT_DR26_SIZE sizeof(tdf_dendrometer_ict_dr26_t)

typedef struct tdf_dendrometer_ict_dr26_2 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_2_t;
#define TDF_DENDROMETER_ICT_DR26_2_SIZE sizeof(tdf_dendrometer_ict_dr26_2_t)

typedef struct tdf_dendrometer_ict_dr26_3 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_3_t;
#define TDF_DENDROMETER_ICT_DR26_3_SIZE sizeof(tdf_dendrometer_ict_dr26_3_t)

typedef struct tdf_dendrometer_ict_dr26_4 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_4_t;
#define TDF_DENDROMETER_ICT_DR26_4_SIZE sizeof(tdf_dendrometer_ict_dr26_4_t)

typedef struct tdf_dendrometer_ict_dr26_5 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_5_t;
#define TDF_DENDROMETER_ICT_DR26_5_SIZE sizeof(tdf_dendrometer_ict_dr26_5_t)

typedef struct tdf_dendrometer_ict_dr26_6 {
    float absdiammm;  
    uint32_t reldiamrawmicrov;  
} ATTR_PACKED tdf_dendrometer_ict_dr26_6_t;
#define TDF_DENDROMETER_ICT_DR26_6_SIZE sizeof(tdf_dendrometer_ict_dr26_6_t)

typedef struct tdf_tensiometer_ict_gt3_15 {
    uint32_t tensiometer_ict_gt3_15;  
} ATTR_PACKED tdf_tensiometer_ict_gt3_15_t;
#define TDF_TENSIOMETER_ICT_GT3_15_SIZE sizeof(tdf_tensiometer_ict_gt3_15_t)

typedef struct tdf_temp_vaisala_hmp60 {
    uint32_t airtemperature;  
} ATTR_PACKED tdf_temp_vaisala_hmp60_t;
#define TDF_TEMP_VAISALA_HMP60_SIZE sizeof(tdf_temp_vaisala_hmp60_t)

typedef struct tdf_humid_vaisala_hmp60 {
    uint32_t humidity;  
} ATTR_PACKED tdf_humid_vaisala_hmp60_t;
#define TDF_HUMID_VAISALA_HMP60_SIZE sizeof(tdf_humid_vaisala_hmp60_t)

typedef struct tdf_co2_dynament_1000ppm {
    uint32_t partspermillion;  
} ATTR_PACKED tdf_co2_dynament_1000ppm_t;
#define TDF_CO2_DYNAMENT_1000PPM_SIZE sizeof(tdf_co2_dynament_1000ppm_t)

typedef struct tdf_co2_dynament_1000ppm_high {
    uint32_t partspermillion;  
} ATTR_PACKED tdf_co2_dynament_1000ppm_high_t;
#define TDF_CO2_DYNAMENT_1000PPM_HIGH_SIZE sizeof(tdf_co2_dynament_1000ppm_high_t)

typedef struct tdf_leafwet_decagon_lws_5v {
    uint32_t voltage;  
} ATTR_PACKED tdf_leafwet_decagon_lws_5v_t;
#define TDF_LEAFWET_DECAGON_LWS_5V_SIZE sizeof(tdf_leafwet_decagon_lws_5v_t)

typedef struct tdf_leafwet_decagon_lws_5v_high {
    uint32_t voltage;  
} ATTR_PACKED tdf_leafwet_decagon_lws_5v_high_t;
#define TDF_LEAFWET_DECAGON_LWS_5V_HIGH_SIZE sizeof(tdf_leafwet_decagon_lws_5v_high_t)

typedef struct tdf_leafwet_decagon_lws_5v_ground {
    uint32_t voltage;  
} ATTR_PACKED tdf_leafwet_decagon_lws_5v_ground_t;
#define TDF_LEAFWET_DECAGON_LWS_5V_GROUND_SIZE sizeof(tdf_leafwet_decagon_lws_5v_ground_t)

typedef struct tdf_light_apogee_sq110_high {
    uint32_t light_apogee_sq110_high;  
} ATTR_PACKED tdf_light_apogee_sq110_high_t;
#define TDF_LIGHT_APOGEE_SQ110_HIGH_SIZE sizeof(tdf_light_apogee_sq110_high_t)

typedef struct tdf_light_apogee_sp110_high {
    uint32_t light_apogee_sp110_high;  
} ATTR_PACKED tdf_light_apogee_sp110_high_t;
#define TDF_LIGHT_APOGEE_SP110_HIGH_SIZE sizeof(tdf_light_apogee_sp110_high_t)

typedef struct tdf_fog_optical_miniofs {
    uint32_t distance;  
} ATTR_PACKED tdf_fog_optical_miniofs_t;
#define TDF_FOG_OPTICAL_MINIOFS_SIZE sizeof(tdf_fog_optical_miniofs_t)

typedef struct tdf_fog_optical_miniofs_high {
    uint32_t distance;  
} ATTR_PACKED tdf_fog_optical_miniofs_high_t;
#define TDF_FOG_OPTICAL_MINIOFS_HIGH_SIZE sizeof(tdf_fog_optical_miniofs_high_t)

typedef struct tdf_cloud_optical_pccd {
    uint32_t cloudcoverfactor;  
} ATTR_PACKED tdf_cloud_optical_pccd_t;
#define TDF_CLOUD_OPTICAL_PCCD_SIZE sizeof(tdf_cloud_optical_pccd_t)

typedef struct tdf_wind_direction_vaisala_wxt520_high {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_direction_vaisala_wxt520_high_t;
#define TDF_WIND_DIRECTION_VAISALA_WXT520_HIGH_SIZE sizeof(tdf_wind_direction_vaisala_wxt520_high_t)

typedef struct tdf_wind_speed_vaisala_wxt520_high {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_speed_vaisala_wxt520_high_t;
#define TDF_WIND_SPEED_VAISALA_WXT520_HIGH_SIZE sizeof(tdf_wind_speed_vaisala_wxt520_high_t)

typedef struct tdf_ptu_vaisala_wxt520_high {
    float temp;  
    float humidity;  
    float pressure;  
} ATTR_PACKED tdf_ptu_vaisala_wxt520_high_t;
#define TDF_PTU_VAISALA_WXT520_HIGH_SIZE sizeof(tdf_ptu_vaisala_wxt520_high_t)

typedef struct tdf_rain_vaisala_wxt520_high {
    float accum;  
    float duration;  
    float peakintensity;  
} ATTR_PACKED tdf_rain_vaisala_wxt520_high_t;
#define TDF_RAIN_VAISALA_WXT520_HIGH_SIZE sizeof(tdf_rain_vaisala_wxt520_high_t)

typedef struct tdf_hail_vaisala_wxt520_high {
    float accum;  
    float duration;  
    float peakintensity;  
} ATTR_PACKED tdf_hail_vaisala_wxt520_high_t;
#define TDF_HAIL_VAISALA_WXT520_HIGH_SIZE sizeof(tdf_hail_vaisala_wxt520_high_t)

typedef struct tdf_co2_vaisala_gmp343 {
    uint32_t partspermillion;  
} ATTR_PACKED tdf_co2_vaisala_gmp343_t;
#define TDF_CO2_VAISALA_GMP343_SIZE sizeof(tdf_co2_vaisala_gmp343_t)

typedef struct tdf_rain_ict_ssrg1 {
    uint16_t rainaccumulation;  
} ATTR_PACKED tdf_rain_ict_ssrg1_t;
#define TDF_RAIN_ICT_SSRG1_SIZE sizeof(tdf_rain_ict_ssrg1_t)

typedef struct tdf_sapflow_ict_sfm1_1 {
    float vbatt;  
    float rawheatpulsevelocity1;  
    float rawheatpulsevelocity2;  
    float sapvelocity1;  
    float sapvelocity2;  
    float sapflow1;  
    float sapflow2;  
} ATTR_PACKED tdf_sapflow_ict_sfm1_1_t;
#define TDF_SAPFLOW_ICT_SFM1_1_SIZE sizeof(tdf_sapflow_ict_sfm1_1_t)

typedef struct tdf_sapflow_ict_sfm1_2 {
    float vbatt;  
    float rawheatpulsevelocity1;  
    float rawheatpulsevelocity2;  
    float sapvelocity1;  
    float sapvelocity2;  
    float sapflow1;  
    float sapflow2;  
} ATTR_PACKED tdf_sapflow_ict_sfm1_2_t;
#define TDF_SAPFLOW_ICT_SFM1_2_SIZE sizeof(tdf_sapflow_ict_sfm1_2_t)

typedef struct tdf_sapflow_ict_sfm1_3 {
    float vbatt;  
    float rawheatpulsevelocity1;  
    float rawheatpulsevelocity2;  
    float sapvelocity1;  
    float sapvelocity2;  
    float sapflow1;  
    float sapflow2;  
} ATTR_PACKED tdf_sapflow_ict_sfm1_3_t;
#define TDF_SAPFLOW_ICT_SFM1_3_SIZE sizeof(tdf_sapflow_ict_sfm1_3_t)

typedef struct tdf_wind_direction_vaisala_wmt52 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_direction_vaisala_wmt52_t;
#define TDF_WIND_DIRECTION_VAISALA_WMT52_SIZE sizeof(tdf_wind_direction_vaisala_wmt52_t)

typedef struct tdf_wind_speed_vaisala_wmt52 {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_speed_vaisala_wmt52_t;
#define TDF_WIND_SPEED_VAISALA_WMT52_SIZE sizeof(tdf_wind_speed_vaisala_wmt52_t)

typedef struct tdf_wind_direction_vaisala_wmt52_high {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_direction_vaisala_wmt52_high_t;
#define TDF_WIND_DIRECTION_VAISALA_WMT52_HIGH_SIZE sizeof(tdf_wind_direction_vaisala_wmt52_high_t)

typedef struct tdf_wind_speed_vaisala_wmt52_high {
    float min;  
    float avg;  
    float max;  
} ATTR_PACKED tdf_wind_speed_vaisala_wmt52_high_t;
#define TDF_WIND_SPEED_VAISALA_WMT52_HIGH_SIZE sizeof(tdf_wind_speed_vaisala_wmt52_high_t)

typedef struct tdf_soil_decagon_5tm {
    float vwc;  
    float temp;  
} ATTR_PACKED tdf_soil_decagon_5tm_t;
#define TDF_SOIL_DECAGON_5TM_SIZE sizeof(tdf_soil_decagon_5tm_t)

typedef struct tdf_temp_apogee_si121 {
    float targettempc;  
    float bodytempc;  
    int32_t targettemprawnv;  
    int32_t bodytemprawuv;  
} ATTR_PACKED tdf_temp_apogee_si121_t;
#define TDF_TEMP_APOGEE_SI121_SIZE sizeof(tdf_temp_apogee_si121_t)

typedef struct tdf_temp_exergen_irtc07_k {
    float tempc;  
    int32_t temprawnv;  
} ATTR_PACKED tdf_temp_exergen_irtc07_k_t;
#define TDF_TEMP_EXERGEN_IRTC07_K_SIZE sizeof(tdf_temp_exergen_irtc07_k_t)

typedef struct tdf_temp_exergen_irtc03_k {
    float tempc;  
    int32_t temprawnv;  
} ATTR_PACKED tdf_temp_exergen_irtc03_k_t;
#define TDF_TEMP_EXERGEN_IRTC03_K_SIZE sizeof(tdf_temp_exergen_irtc03_k_t)

typedef struct tdf_light_deltat_tls {
    uint32_t solarradiation;  
} ATTR_PACKED tdf_light_deltat_tls_t;
#define TDF_LIGHT_DELTAT_TLS_SIZE sizeof(tdf_light_deltat_tls_t)

typedef struct tdf_light_deltat_tls_2 {
    uint32_t solarradiation;  
} ATTR_PACKED tdf_light_deltat_tls_2_t;
#define TDF_LIGHT_DELTAT_TLS_2_SIZE sizeof(tdf_light_deltat_tls_2_t)

typedef struct tdf_temp_melexis_mlx90614esf_acf {
    float ambtempc;  
    float targettempc;  
} ATTR_PACKED tdf_temp_melexis_mlx90614esf_acf_t;
#define TDF_TEMP_MELEXIS_MLX90614ESF_ACF_SIZE sizeof(tdf_temp_melexis_mlx90614esf_acf_t)

typedef struct tdf_temp_t_thermocouple {
    uint32_t temperature;  
} ATTR_PACKED tdf_temp_t_thermocouple_t;
#define TDF_TEMP_T_THERMOCOUPLE_SIZE sizeof(tdf_temp_t_thermocouple_t)

typedef struct tdf_temp_t_thermocouple_2 {
    uint32_t temp_t_thermocouple_2;  
} ATTR_PACKED tdf_temp_t_thermocouple_2_t;
#define TDF_TEMP_T_THERMOCOUPLE_2_SIZE sizeof(tdf_temp_t_thermocouple_2_t)

typedef struct tdf_temp_t_thermocouple_3 {
    uint32_t temp_t_thermocouple_3;  
} ATTR_PACKED tdf_temp_t_thermocouple_3_t;
#define TDF_TEMP_T_THERMOCOUPLE_3_SIZE sizeof(tdf_temp_t_thermocouple_3_t)

typedef struct tdf_temp_t_thermocouple_4 {
    uint32_t temp_t_thermocouple_4;  
} ATTR_PACKED tdf_temp_t_thermocouple_4_t;
#define TDF_TEMP_T_THERMOCOUPLE_4_SIZE sizeof(tdf_temp_t_thermocouple_4_t)

typedef struct tdf_bmp085_raw {
    uint16_t temperature;  
    uint32_t pressure;  
} ATTR_PACKED tdf_bmp085_raw_t;
#define TDF_BMP085_RAW_SIZE sizeof(tdf_bmp085_raw_t)

typedef struct tdf_bmp085_compensated {
    uint16_t temperature;  
    uint32_t pressure;  
} ATTR_PACKED tdf_bmp085_compensated_t;
#define TDF_BMP085_COMPENSATED_SIZE sizeof(tdf_bmp085_compensated_t)

typedef struct tdf_pacp_power {
    uint16_t batteryvoltage;  
    uint16_t chargecurrent;  
    uint16_t chargevoltage;  
} ATTR_PACKED tdf_pacp_power_t;
#define TDF_PACP_POWER_SIZE sizeof(tdf_pacp_power_t)

typedef struct tdf_gas_methane {
    uint16_t gas_methane;  
} ATTR_PACKED tdf_gas_methane_t;
#define TDF_GAS_METHANE_SIZE sizeof(tdf_gas_methane_t)

typedef struct tdf_gas_co2 {
    uint16_t partspermillion;  
} ATTR_PACKED tdf_gas_co2_t;
#define TDF_GAS_CO2_SIZE sizeof(tdf_gas_co2_t)

typedef struct tdf_gas_hydrogen {
    uint16_t bias;  
    uint16_t low;  
    uint16_t hi;  
} ATTR_PACKED tdf_gas_hydrogen_t;
#define TDF_GAS_HYDROGEN_SIZE sizeof(tdf_gas_hydrogen_t)

typedef struct tdf_eartag_power {
    uint16_t batteryvoltage;  
    uint16_t chargevoltage;  
    uint16_t chargecurrent;  
} ATTR_PACKED tdf_eartag_power_t;
#define TDF_EARTAG_POWER_SIZE sizeof(tdf_eartag_power_t)

typedef struct tdf_lsm303 {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_lsm303_t;
#define TDF_LSM303_SIZE sizeof(tdf_lsm303_t)

typedef struct tdf_temp_humid_sht25_raw {
    uint16_t temp;  
    uint16_t humid;  
} ATTR_PACKED tdf_temp_humid_sht25_raw_t;
#define TDF_TEMP_HUMID_SHT25_RAW_SIZE sizeof(tdf_temp_humid_sht25_raw_t)

typedef struct tdf_temp_humid_sht25_compensated {
    uint16_t temp;  
    uint16_t humid;  
} ATTR_PACKED tdf_temp_humid_sht25_compensated_t;
#define TDF_TEMP_HUMID_SHT25_COMPENSATED_SIZE sizeof(tdf_temp_humid_sht25_compensated_t)

typedef struct tdf_light_avago_cr999 {
    uint16_t red;  
    uint16_t green;  
    uint16_t blue;  
    uint16_t clear;  
} ATTR_PACKED tdf_light_avago_cr999_t;
#define TDF_LIGHT_AVAGO_CR999_SIZE sizeof(tdf_light_avago_cr999_t)

typedef struct tdf_reed_switch {
    uint8_t reed_switch;  
} ATTR_PACKED tdf_reed_switch_t;
#define TDF_REED_SWITCH_SIZE sizeof(tdf_reed_switch_t)

typedef struct tdf_pacp_audio_raw {
    uint8_t pacp_audio_raw[24];  
} ATTR_PACKED tdf_pacp_audio_raw_t;
#define TDF_PACP_AUDIO_RAW_SIZE sizeof(tdf_pacp_audio_raw_t)

typedef struct tdf_pacp_audio_silence {
    uint16_t silentblocks;  
} ATTR_PACKED tdf_pacp_audio_silence_t;
#define TDF_PACP_AUDIO_SILENCE_SIZE sizeof(tdf_pacp_audio_silence_t)

typedef struct tdf_acc_lsm303 {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
} ATTR_PACKED tdf_acc_lsm303_t;
#define TDF_ACC_LSM303_SIZE sizeof(tdf_acc_lsm303_t)

typedef struct tdf_mag_lsm303 {
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mag_lsm303_t;
#define TDF_MAG_LSM303_SIZE sizeof(tdf_mag_lsm303_t)

typedef struct tdf_radio_stats {
    uint16_t srcaddr;  
    uint16_t pktnum;  
    int16_t rssi;  
    uint16_t lqi;  
} ATTR_PACKED tdf_radio_stats_t;
#define TDF_RADIO_STATS_SIZE sizeof(tdf_radio_stats_t)

typedef struct tdf_lambing_stats {
    uint32_t sdblocknum;  
    uint8_t mode;  
} ATTR_PACKED tdf_lambing_stats_t;
#define TDF_LAMBING_STATS_SIZE sizeof(tdf_lambing_stats_t)

typedef struct tdf_gps_posllh {
    uint32_t itow;  
    int32_t lon;  
    int32_t lat;  
    int32_t height;  
    int32_t hmsl;  
    uint32_t hacc;  
    uint32_t vacc;  
} ATTR_PACKED tdf_gps_posllh_t;
#define TDF_GPS_POSLLH_SIZE sizeof(tdf_gps_posllh_t)

typedef struct tdf_gps_timegps {
    uint32_t itow;  
    int32_t ftow;  
    int16_t week;  
    int8_t leaps;  
    uint8_t valid;  
    uint32_t tacc;  
} ATTR_PACKED tdf_gps_timegps_t;
#define TDF_GPS_TIMEGPS_SIZE sizeof(tdf_gps_timegps_t)

typedef struct tdf_gps_navsol {
    uint32_t itow;  
    int32_t ftow;  
    int16_t week;  
    uint8_t gpsfix;  
    uint8_t flags;  
    int32_t ecefx;  
    int32_t ecefy;  
    int32_t ecefz;  
    uint32_t pacc;  
    int32_t ecefvx;  
    int32_t ecefvy;  
    int32_t ecefvz;  
    uint32_t sacc;  
    uint16_t pdop;  
    uint8_t res1;  
    uint8_t numsv;  
    uint32_t res2;  
} ATTR_PACKED tdf_gps_navsol_t;
#define TDF_GPS_NAVSOL_SIZE sizeof(tdf_gps_navsol_t)

typedef struct tdf_sd_page_num {
    uint32_t sdpagenum;  
} ATTR_PACKED tdf_sd_page_num_t;
#define TDF_SD_PAGE_NUM_SIZE sizeof(tdf_sd_page_num_t)

typedef struct tdf_weight_bridge {
    uint16_t manufacturerid;  
    uint64_t tagnumber;  
    uint32_t weight;  
} ATTR_PACKED tdf_weight_bridge_t;
#define TDF_WEIGHT_BRIDGE_SIZE sizeof(tdf_weight_bridge_t)

typedef struct tdf_opal_onboard_stats {
    uint16_t batteryvoltage;  
    uint16_t chargecurrent;  
    uint16_t chargevoltage;  
    uint16_t mcp980temp;  
} ATTR_PACKED tdf_opal_onboard_stats_t;
#define TDF_OPAL_ONBOARD_STATS_SIZE sizeof(tdf_opal_onboard_stats_t)

typedef struct tdf_pacp_precision_power {
    uint16_t batteryvoltage;  
    uint16_t chargecurrent;  
    uint16_t chargevoltage;  
} ATTR_PACKED tdf_pacp_precision_power_t;
#define TDF_PACP_PRECISION_POWER_SIZE sizeof(tdf_pacp_precision_power_t)

typedef struct tdf_battery_solar {
    uint16_t batteryvoltage;  
    uint16_t solarvoltage;  
} ATTR_PACKED tdf_battery_solar_t;
#define TDF_BATTERY_SOLAR_SIZE sizeof(tdf_battery_solar_t)

typedef struct tdf_flash_data {
    uint8_t flash_data[40];  
} ATTR_PACKED tdf_flash_data_t;
#define TDF_FLASH_DATA_SIZE sizeof(tdf_flash_data_t)

typedef struct tdf_flash_page {
    uint32_t page;  
} ATTR_PACKED tdf_flash_page_t;
#define TDF_FLASH_PAGE_SIZE sizeof(tdf_flash_page_t)

typedef struct tdf_gps_position {
    int32_t lon;  
    int32_t lat;  
    int32_t height;  
    uint8_t status;  
    uint8_t pacc;  
    uint8_t speed;  
} ATTR_PACKED tdf_gps_position_t;
#define TDF_GPS_POSITION_SIZE sizeof(tdf_gps_position_t)

typedef struct tdf_pacp_reset_count {
    uint16_t resets;  
} ATTR_PACKED tdf_pacp_reset_count_t;
#define TDF_PACP_RESET_COUNT_SIZE sizeof(tdf_pacp_reset_count_t)

typedef struct tdf_uptime {
    uint32_t uptime;  
} ATTR_PACKED tdf_uptime_t;
#define TDF_UPTIME_SIZE sizeof(tdf_uptime_t)

typedef struct tdf_flash_data_location {
    uint16_t pagenum;  
    uint8_t offset;  
} ATTR_PACKED tdf_flash_data_location_t;
#define TDF_FLASH_DATA_LOCATION_SIZE sizeof(tdf_flash_data_location_t)

typedef struct tdf_gas_ir15tt {
    uint16_t reference;  
    uint16_t methane;  
    uint16_t carbon;  
    uint16_t thermistor;  
} ATTR_PACKED tdf_gas_ir15tt_t;
#define TDF_GAS_IR15TT_SIZE sizeof(tdf_gas_ir15tt_t)

typedef struct tdf_mpu9150 {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
    int16_t temp;  
    int16_t gyrox;  
    int16_t gyroy;  
    int16_t gyroz;  
} ATTR_PACKED tdf_mpu9150_t;
#define TDF_MPU9150_SIZE sizeof(tdf_mpu9150_t)

typedef struct tdf_pacp_wind_vaisala_wxt520 {
    uint16_t directionmin;  
    uint16_t directionavg;  
    uint16_t directionmax;  
    uint16_t speedmin;  
    uint16_t speedavg;  
    uint16_t speedmax;  
} ATTR_PACKED tdf_pacp_wind_vaisala_wxt520_t;
#define TDF_PACP_WIND_VAISALA_WXT520_SIZE sizeof(tdf_pacp_wind_vaisala_wxt520_t)

typedef struct tdf_pacp_pth_vaisala_wxt520 {
    int16_t airtemp;  
    uint16_t relhumidity;  
    uint16_t airpressure;  
} ATTR_PACKED tdf_pacp_pth_vaisala_wxt520_t;
#define TDF_PACP_PTH_VAISALA_WXT520_SIZE sizeof(tdf_pacp_pth_vaisala_wxt520_t)

typedef struct tdf_pacp_precip_vaisala_wxt520 {
    uint32_t rainaccum;  
    uint32_t rainduration;  
    uint32_t rainintensity;  
    uint32_t hailaccum;  
    uint16_t hailduration;  
    uint32_t hailintensity;  
    uint16_t rainpeak;  
    uint16_t hailpeak;  
} ATTR_PACKED tdf_pacp_precip_vaisala_wxt520_t;
#define TDF_PACP_PRECIP_VAISALA_WXT520_SIZE sizeof(tdf_pacp_precip_vaisala_wxt520_t)

typedef struct tdf_pacp_super_vaisala_wxt520 {
    int16_t heattemp;  
    uint16_t heatvolt;  
    uint16_t supplyvolt;  
    uint16_t refvolt;  
} ATTR_PACKED tdf_pacp_super_vaisala_wxt520_t;
#define TDF_PACP_SUPER_VAISALA_WXT520_SIZE sizeof(tdf_pacp_super_vaisala_wxt520_t)

typedef struct tdf_pacp_reset_reason {
    uint16_t reason;  
} ATTR_PACKED tdf_pacp_reset_reason_t;
#define TDF_PACP_RESET_REASON_SIZE sizeof(tdf_pacp_reset_reason_t)

typedef struct tdf_gps_status {
    uint8_t ttff;  
    uint8_t flags;  
} ATTR_PACKED tdf_gps_status_t;
#define TDF_GPS_STATUS_SIZE sizeof(tdf_gps_status_t)

typedef struct tdf_pacp_power_status {
    uint16_t batteryvoltage;  
    uint16_t chargecurrent;  
    uint16_t chargevoltage;  
    uint8_t powerstate;  
} ATTR_PACKED tdf_pacp_power_status_t;
#define TDF_PACP_POWER_STATUS_SIZE sizeof(tdf_pacp_power_status_t)

typedef struct tdf_build_timestamp {
    uint32_t timestamp;  
} ATTR_PACKED tdf_build_timestamp_t;
#define TDF_BUILD_TIMESTAMP_SIZE sizeof(tdf_build_timestamp_t)

typedef struct tdf_page_download_stats {
    uint16_t base;  
    uint32_t page;  
    uint8_t status;  
} ATTR_PACKED tdf_page_download_stats_t;
#define TDF_PAGE_DOWNLOAD_STATS_SIZE sizeof(tdf_page_download_stats_t)

typedef struct tdf_mpu9150_all {
    uint8_t accmultiplier;  
    uint8_t gyromultiplier;  
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
    int16_t temp;  
    int16_t gyrox;  
    int16_t gyroy;  
    int16_t gyroz;  
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mpu9150_all_t;
#define TDF_MPU9150_ALL_SIZE sizeof(tdf_mpu9150_all_t)

typedef struct tdf_lps331_all {
    int16_t temperature;  
    uint32_t pressure;  
} ATTR_PACKED tdf_lps331_all_t;
#define TDF_LPS331_ALL_SIZE sizeof(tdf_lps331_all_t)

typedef struct tdf_ad7689 {
    uint16_t adc;  
} ATTR_PACKED tdf_ad7689_t;
#define TDF_AD7689_SIZE sizeof(tdf_ad7689_t)

typedef struct tdf_ad7689_single {
    uint8_t channel;  
    uint16_t adc;  
} ATTR_PACKED tdf_ad7689_single_t;
#define TDF_AD7689_SINGLE_SIZE sizeof(tdf_ad7689_single_t)

typedef struct tdf_gateway_position {
    int32_t lon;  
    int32_t lat;  
} ATTR_PACKED tdf_gateway_position_t;
#define TDF_GATEWAY_POSITION_SIZE sizeof(tdf_gateway_position_t)

typedef struct tdf_pacp_audio_data {
    uint8_t pacp_audio_data[32];  
} ATTR_PACKED tdf_pacp_audio_data_t;
#define TDF_PACP_AUDIO_DATA_SIZE sizeof(tdf_pacp_audio_data_t)

typedef struct tdf_pacp_audio_diff {
    uint8_t pacp_audio_diff[17];  
} ATTR_PACKED tdf_pacp_audio_diff_t;
#define TDF_PACP_AUDIO_DIFF_SIZE sizeof(tdf_pacp_audio_diff_t)

typedef struct tdf_lsm303dlhc_acc {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
} ATTR_PACKED tdf_lsm303dlhc_acc_t;
#define TDF_LSM303DLHC_ACC_SIZE sizeof(tdf_lsm303dlhc_acc_t)

typedef struct tdf_lsm303dlhc_mag {
    int16_t magx;  
    int16_t magz;  
    int16_t magy;  
} ATTR_PACKED tdf_lsm303dlhc_mag_t;
#define TDF_LSM303DLHC_MAG_SIZE sizeof(tdf_lsm303dlhc_mag_t)

typedef struct tdf_lsm303dlhc_acc_interrupt {
    uint8_t source;  
    uint8_t threshold;  
    uint8_t duration;  
} ATTR_PACKED tdf_lsm303dlhc_acc_interrupt_t;
#define TDF_LSM303DLHC_ACC_INTERRUPT_SIZE sizeof(tdf_lsm303dlhc_acc_interrupt_t)

typedef struct tdf_radio_contact_log {
    uint16_t source;  
    uint8_t rssi;  
    uint8_t lqi;  
} ATTR_PACKED tdf_radio_contact_log_t;
#define TDF_RADIO_CONTACT_LOG_SIZE sizeof(tdf_radio_contact_log_t)

typedef struct tdf_debug_text {
    char text[32];  
} ATTR_PACKED tdf_debug_text_t;
#define TDF_DEBUG_TEXT_SIZE sizeof(tdf_debug_text_t)

typedef struct tdf_app_info {
    uint8_t major;  
    uint8_t minor;  
    uint32_t buildtime;  
} ATTR_PACKED tdf_app_info_t;
#define TDF_APP_INFO_SIZE sizeof(tdf_app_info_t)

typedef struct tdf_kernel_version {
    char version[128];  
} ATTR_PACKED tdf_kernel_version_t;
#define TDF_KERNEL_VERSION_SIZE sizeof(tdf_kernel_version_t)

typedef struct tdf_software_version {
    char version[128];  
} ATTR_PACKED tdf_software_version_t;
#define TDF_SOFTWARE_VERSION_SIZE sizeof(tdf_software_version_t)

typedef struct tdf_basestation_info {
    uint16_t nodeid;  
    uint8_t channel;  
} ATTR_PACKED tdf_basestation_info_t;
#define TDF_BASESTATION_INFO_SIZE sizeof(tdf_basestation_info_t)

typedef struct tdf_street_address {
    char address[128];  
} ATTR_PACKED tdf_street_address_t;
#define TDF_STREET_ADDRESS_SIZE sizeof(tdf_street_address_t)

typedef struct tdf_gas_tgs821 {
    uint16_t hydrogen;  
    uint16_t lamp;  
} ATTR_PACKED tdf_gas_tgs821_t;
#define TDF_GAS_TGS821_SIZE sizeof(tdf_gas_tgs821_t)

typedef struct tdf_page_write_stats {
    uint32_t page;  
} ATTR_PACKED tdf_page_write_stats_t;
#define TDF_PAGE_WRITE_STATS_SIZE sizeof(tdf_page_write_stats_t)

typedef struct tdf_pacp_audio {
    uint16_t sample;  
} ATTR_PACKED tdf_pacp_audio_t;
#define TDF_PACP_AUDIO_SIZE sizeof(tdf_pacp_audio_t)

typedef struct tdf_annotation {
    char event[20];  
    uint32_t duration;  
    char annotator[30];  
    char reference[30];  
    uint8_t confidence;  
} ATTR_PACKED tdf_annotation_t;
#define TDF_ANNOTATION_SIZE sizeof(tdf_annotation_t)

typedef struct tdf_rssi_roundtrip {
    uint16_t nodeid;  
    uint16_t packetid;  
    uint8_t txrssi;  
    uint8_t txlqi;  
    uint8_t rxrssi;  
    uint8_t rxlqi;  
} ATTR_PACKED tdf_rssi_roundtrip_t;
#define TDF_RSSI_ROUNDTRIP_SIZE sizeof(tdf_rssi_roundtrip_t)

typedef struct tdf_mp3h6115a {
    uint16_t pressure;  
} ATTR_PACKED tdf_mp3h6115a_t;
#define TDF_MP3H6115A_SIZE sizeof(tdf_mp3h6115a_t)

typedef struct tdf_tmp112 {
    int16_t temperature;  
} ATTR_PACKED tdf_tmp112_t;
#define TDF_TMP112_SIZE sizeof(tdf_tmp112_t)

typedef struct tdf_gps_receiver_status {
    uint8_t status;  
    uint8_t flags;  
} ATTR_PACKED tdf_gps_receiver_status_t;
#define TDF_GPS_RECEIVER_STATUS_SIZE sizeof(tdf_gps_receiver_status_t)

typedef struct tdf_gps_ttff {
    uint32_t ttff;  
} ATTR_PACKED tdf_gps_ttff_t;
#define TDF_GPS_TTFF_SIZE sizeof(tdf_gps_ttff_t)

typedef struct tdf_pacp_1k24_power {
    uint16_t batteryvoltage;  
    uint16_t chargecurrent;  
    uint16_t chargevoltage;  
} ATTR_PACKED tdf_pacp_1k24_power_t;
#define TDF_PACP_1K24_POWER_SIZE sizeof(tdf_pacp_1k24_power_t)

typedef struct tdf_gps {
    int32_t lon;  
    int32_t lat;  
    int32_t height;  
    uint16_t accuracy;  
    uint16_t heading;  
    uint16_t speed;  
    uint8_t pdop;  
    uint8_t fix;  
    uint8_t numsv;  
    uint8_t flags;  
} ATTR_PACKED tdf_gps_t;
#define TDF_GPS_SIZE sizeof(tdf_gps_t)

typedef struct tdf_modem_traffic_stats {
    uint32_t upload;  
    uint32_t download;  
} ATTR_PACKED tdf_modem_traffic_stats_t;
#define TDF_MODEM_TRAFFIC_STATS_SIZE sizeof(tdf_modem_traffic_stats_t)

typedef struct tdf_debug_text_short {
    char text[16];  
} ATTR_PACKED tdf_debug_text_short_t;
#define TDF_DEBUG_TEXT_SHORT_SIZE sizeof(tdf_debug_text_short_t)

typedef struct tdf_radio_packet_stats {
    uint16_t source;  
    uint8_t rssi;  
    uint8_t lqi;  
} ATTR_PACKED tdf_radio_packet_stats_t;
#define TDF_RADIO_PACKET_STATS_SIZE sizeof(tdf_radio_packet_stats_t)

typedef struct tdf_gps_hardware_version {
    uint8_t version;  
} ATTR_PACKED tdf_gps_hardware_version_t;
#define TDF_GPS_HARDWARE_VERSION_SIZE sizeof(tdf_gps_hardware_version_t)

typedef struct tdf_disk_usage_stats {
    uint64_t total;  
    uint64_t free;  
    uint64_t used;  
} ATTR_PACKED tdf_disk_usage_stats_t;
#define TDF_DISK_USAGE_STATS_SIZE sizeof(tdf_disk_usage_stats_t)

typedef struct tdf_species {
    char species[128];  
} ATTR_PACKED tdf_species_t;
#define TDF_SPECIES_SIZE sizeof(tdf_species_t)

// Changed from 256 bytes to 255 so length fits in uint8_t
typedef struct tdf_gateway_schedule {
    char schedule[255];  
} ATTR_PACKED tdf_gateway_schedule_t;
#define TDF_GATEWAY_SCHEDULE_SIZE sizeof(tdf_gateway_schedule_t)

typedef struct tdf_gas_tgs832 {
    uint16_t cfc;  
    uint16_t lamp;  
} ATTR_PACKED tdf_gas_tgs832_t;
#define TDF_GAS_TGS832_SIZE sizeof(tdf_gas_tgs832_t)

typedef struct tdf_ad7718_channel {
    uint32_t value;  
    uint8_t channel;  
    uint8_t mode;  
    uint8_t unit;  
} ATTR_PACKED tdf_ad7718_channel_t;
#define TDF_AD7718_CHANNEL_SIZE sizeof(tdf_ad7718_channel_t)

typedef struct tdf_android_battery {
    uint8_t percent;  
} ATTR_PACKED tdf_android_battery_t;
#define TDF_ANDROID_BATTERY_SIZE sizeof(tdf_android_battery_t)

typedef struct tdf_mobile_signal {
    uint8_t rssi;  
    uint8_t ber;  
} ATTR_PACKED tdf_mobile_signal_t;
#define TDF_MOBILE_SIGNAL_SIZE sizeof(tdf_mobile_signal_t)

typedef struct tdf_iaqcore_voc {
    uint16_t carbon;  
    int32_t resistance;  
    uint16_t tvoc;  
} ATTR_PACKED tdf_iaqcore_voc_t;
#define TDF_IAQCORE_VOC_SIZE sizeof(tdf_iaqcore_voc_t)

typedef struct tdf_khs200_h2 {
    uint16_t hydrogen;  
} ATTR_PACKED tdf_khs200_h2_t;
#define TDF_KHS200_H2_SIZE sizeof(tdf_khs200_h2_t)

typedef struct tdf_radio_contact {
    uint16_t source;  
    uint16_t seqno;  
    uint8_t rssi;  
    uint8_t lqi;  
} ATTR_PACKED tdf_radio_contact_t;
#define TDF_RADIO_CONTACT_SIZE sizeof(tdf_radio_contact_t)

typedef struct tdf_ibeacon {
    char mac[17];  
    int16_t rssi;  
    int16_t txpower;  
} ATTR_PACKED tdf_ibeacon_t;
#define TDF_IBEACON_SIZE sizeof(tdf_ibeacon_t)

typedef struct tdf_radiation {
    uint16_t count;  
} ATTR_PACKED tdf_radiation_t;
#define TDF_RADIATION_SIZE sizeof(tdf_radiation_t)

typedef struct tdf_ir15tt_calibrated {
    uint16_t methane;  
    uint16_t carbon;  
} ATTR_PACKED tdf_ir15tt_calibrated_t;
#define TDF_IR15TT_CALIBRATED_SIZE sizeof(tdf_ir15tt_calibrated_t)

typedef struct tdf_radiation_delta {
    uint16_t count;  
} ATTR_PACKED tdf_radiation_delta_t;
#define TDF_RADIATION_DELTA_SIZE sizeof(tdf_radiation_delta_t)

typedef struct tdf_radiation_sievert {
    uint16_t sievert;  
} ATTR_PACKED tdf_radiation_sievert_t;
#define TDF_RADIATION_SIEVERT_SIZE sizeof(tdf_radiation_sievert_t)

typedef struct tdf_gp2y_range {
    uint16_t distance;  
} ATTR_PACKED tdf_gp2y_range_t;
#define TDF_GP2Y_RANGE_SIZE sizeof(tdf_gp2y_range_t)

typedef struct tdf_radiation_cps {
    uint16_t cps;  
} ATTR_PACKED tdf_radiation_cps_t;
#define TDF_RADIATION_CPS_SIZE sizeof(tdf_radiation_cps_t)

typedef struct tdf_sd_pages_per_min {
    uint16_t ppm;  
} ATTR_PACKED tdf_sd_pages_per_min_t;
#define TDF_SD_PAGES_PER_MIN_SIZE sizeof(tdf_sd_pages_per_min_t)

typedef struct tdf_missed_data {
    uint32_t data_missed;  
} ATTR_PACKED tdf_missed_data_t;
#define TDF_MISSED_DATA_SIZE sizeof(tdf_missed_data_t)

typedef struct tdf_external_12v_battery {
    uint16_t voltage;  
} ATTR_PACKED tdf_external_12v_battery_t;
#define TDF_EXTERNAL_12V_BATTERY_SIZE sizeof(tdf_external_12v_battery_t)

typedef struct tdf_status {
    uint8_t mode;  
} ATTR_PACKED tdf_status_t;
#define TDF_STATUS_SIZE sizeof(tdf_status_t)

typedef struct tdf_gateway_status {
    uint16_t pendingVideos;  
    uint32_t pendingJson;  
    char mode[20];  
} ATTR_PACKED tdf_gateway_status_t;
#define TDF_GATEWAY_STATUS_SIZE sizeof(tdf_gateway_status_t)

typedef struct tdf_decagon_5tm_potting_soil {
    char vwc[5];  
    char temperature[5];  
} ATTR_PACKED tdf_decagon_5tm_potting_soil_t;
#define TDF_DECAGON_5TM_POTTING_SOIL_SIZE sizeof(tdf_decagon_5tm_potting_soil_t)

typedef struct tdf_ibeacon_major_minor {
    char majorminor[11];  
    int16_t rssi;  
    int16_t txpower;  
} ATTR_PACKED tdf_ibeacon_major_minor_t;
#define TDF_IBEACON_MAJOR_MINOR_SIZE sizeof(tdf_ibeacon_major_minor_t)

typedef struct tdf_hih7xxx_sensor {
    uint16_t humidity;  
} ATTR_PACKED tdf_hih7xxx_sensor_t;
#define TDF_HIH7XXX_SENSOR_SIZE sizeof(tdf_hih7xxx_sensor_t)

typedef struct tdf_pacp_2_power_status {
    int32_t voltage;  
    int16_t temperature;  
} ATTR_PACKED tdf_pacp_2_power_status_t;
#define TDF_PACP_2_POWER_STATUS_SIZE sizeof(tdf_pacp_2_power_status_t)

typedef struct tdf_bmp280_raw {
    uint32_t pressure;  
    int32_t temperature;  
} ATTR_PACKED tdf_bmp280_raw_t;
#define TDF_BMP280_RAW_SIZE sizeof(tdf_bmp280_raw_t)

typedef struct tdf_mpu9250_acc {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
} ATTR_PACKED tdf_mpu9250_acc_t;
#define TDF_MPU9250_ACC_SIZE sizeof(tdf_mpu9250_acc_t)

typedef struct tdf_sensortag_temp {
    uint16_t temperature;  
    uint8_t alpha;  
} ATTR_PACKED tdf_sensortag_temp_t;
#define TDF_SENSORTAG_TEMP_SIZE sizeof(tdf_sensortag_temp_t)

typedef struct tdf_sensortag_humid {
    uint16_t humidity;  
    uint8_t alpha;  
} ATTR_PACKED tdf_sensortag_humid_t;
#define TDF_SENSORTAG_HUMID_SIZE sizeof(tdf_sensortag_humid_t)

typedef struct tdf_sensortag_light {
    uint16_t light;  
    uint8_t alpha;  
} ATTR_PACKED tdf_sensortag_light_t;
#define TDF_SENSORTAG_LIGHT_SIZE sizeof(tdf_sensortag_light_t)

typedef struct tdf_hdc1000_raw {
    int32_t temperature;  
    int32_t humidity;  
} ATTR_PACKED tdf_hdc1000_raw_t;
#define TDF_HDC1000_RAW_SIZE sizeof(tdf_hdc1000_raw_t)

typedef struct tdf_sensortag_ibeacon_basic {
    uint16_t major;  
    uint16_t minor;  
    int8_t rssi;  
} ATTR_PACKED tdf_sensortag_ibeacon_basic_t;
#define TDF_SENSORTAG_IBEACON_BASIC_SIZE sizeof(tdf_sensortag_ibeacon_basic_t)

typedef struct tdf_pir {
    uint16_t detection;  
} ATTR_PACKED tdf_pir_t;
#define TDF_PIR_SIZE sizeof(tdf_pir_t)

typedef struct tdf_dad_power {
    uint16_t batteryVoltage;  
    uint16_t chargeCurrent;  
} ATTR_PACKED tdf_dad_power_t;
#define TDF_DAD_POWER_SIZE sizeof(tdf_dad_power_t)

typedef struct tdf_bmp280 {
    uint32_t temperature;  
    uint32_t pressure;  
} ATTR_PACKED tdf_bmp280_t;
#define TDF_BMP280_SIZE sizeof(tdf_bmp280_t)

typedef struct tdf_pir_event {
    uint16_t id;  
    uint32_t duration;  
} ATTR_PACKED tdf_pir_event_t;
#define TDF_PIR_EVENT_SIZE sizeof(tdf_pir_event_t)

typedef struct tdf_mpu9250_acc_raw {
    int16_t acc_x;  
    int16_t acc_y;  
    int16_t acc_z;  
} ATTR_PACKED tdf_mpu9250_acc_raw_t;
#define TDF_MPU9250_ACC_RAW_SIZE sizeof(tdf_mpu9250_acc_raw_t)

typedef struct tdf_mpu9x50_2g_500dps {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
    int16_t temp;  
    int16_t gyrox;  
    int16_t gyroy;  
    int16_t gyroz;  
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mpu9x50_2g_500dps_t;
#define TDF_MPU9X50_2G_500DPS_SIZE sizeof(tdf_mpu9x50_2g_500dps_t)

typedef struct tdf_deter_sound {
    int16_t sound;  
    int16_t duration;  
} ATTR_PACKED tdf_deter_sound_t;
#define TDF_DETER_SOUND_SIZE sizeof(tdf_deter_sound_t)

typedef struct tdf_time_break {
    uint32_t SD_PAGE_NUM;  
} ATTR_PACKED tdf_time_break_t;
#define TDF_TIME_BREAK_SIZE sizeof(tdf_time_break_t)

typedef struct tdf_ltc2942 {
    uint16_t voltage;  
} ATTR_PACKED tdf_ltc2942_t;
#define TDF_LTC2942_SIZE sizeof(tdf_ltc2942_t)

typedef struct tdf_deter_light {
    int16_t pattern;  
    int16_t duration;  
} ATTR_PACKED tdf_deter_light_t;
#define TDF_DETER_LIGHT_SIZE sizeof(tdf_deter_light_t)

typedef struct tdf_pacp2_adc {
    uint16_t voltage;  
} ATTR_PACKED tdf_pacp2_adc_t;
#define TDF_PACP2_ADC_SIZE sizeof(tdf_pacp2_adc_t)

typedef struct tdf_nw_nodeid_0412 {
    uint16_t nw_nodeid_16_devices_4096_nodes;  
} ATTR_PACKED tdf_nw_nodeid_0412_t;
#define TDF_NW_NODEID_0412_SIZE sizeof(tdf_nw_nodeid_0412_t)

typedef struct tdf_nw_nodeid_0808 {
    uint16_t nw_nodeid_256_devices_256_nodes;  
} ATTR_PACKED tdf_nw_nodeid_0808_t;
#define TDF_NW_NODEID_0808_SIZE sizeof(tdf_nw_nodeid_0808_t)

typedef struct tdf_nw_nodeid_0816 {
    uint32_t nw_nodeid_256_devices_65526_nodes;  
} ATTR_PACKED tdf_nw_nodeid_0816_t;
#define TDF_NW_NODEID_0816_SIZE sizeof(tdf_nw_nodeid_0816_t)

typedef struct tdf_oystag_environmental {
    int16_t temperature;  
    uint16_t pressure;  
    uint16_t light;  
} ATTR_PACKED tdf_oystag_environmental_t;
#define TDF_OYSTAG_ENVIRONMENTAL_SIZE sizeof(tdf_oystag_environmental_t)

typedef struct tdf_oystag_diagnostic {
    uint8_t drive;  
    uint8_t plethyq;  
    uint16_t plethy_amp_gain;  
    uint16_t voltage_in;  
    uint16_t voltage_reg;  
} ATTR_PACKED tdf_oystag_diagnostic_t;
#define TDF_OYSTAG_DIAGNOSTIC_SIZE sizeof(tdf_oystag_diagnostic_t)

typedef struct tdf_oystag_physiological {
    uint16_t temperature;  
    uint16_t gape;  
    uint16_t heart_rate;  
    uint8_t periodicity;  
} ATTR_PACKED tdf_oystag_physiological_t;
#define TDF_OYSTAG_PHYSIOLOGICAL_SIZE sizeof(tdf_oystag_physiological_t)

typedef struct tdf_oystag_telemetry_diagnostic {
    uint16_t voltage_in_unloaded;  
    uint16_t voltage_reg_unloaded;  
    uint16_t voltage_in_loaded;  
    uint16_t voltage_reg_loaded;  
    uint16_t current_canbus;  
} ATTR_PACKED tdf_oystag_telemetry_diagnostic_t;
#define TDF_OYSTAG_TELEMETRY_DIAGNOSTIC_SIZE sizeof(tdf_oystag_telemetry_diagnostic_t)

typedef struct tdf_oystag_telemetry_connected_ids {
    uint16_t phenom;  
} ATTR_PACKED tdf_oystag_telemetry_connected_ids_t;
#define TDF_OYSTAG_TELEMETRY_CONNECTED_IDS_SIZE sizeof(tdf_oystag_telemetry_connected_ids_t)

typedef struct tdf_oystag_telemetry_lora {
    uint16_t phenom;  
} ATTR_PACKED tdf_oystag_telemetry_lora_t;
#define TDF_OYSTAG_TELEMETRY_LORA_SIZE sizeof(tdf_oystag_telemetry_lora_t)

typedef struct tdf_lora_round_trip {
    uint32_t RelayId;  
    int16_t TSSI;  
    int8_t TSNR;  
    int16_t RSSI;  
    int8_t RSNR;  
    uint8_t SEQ_NO;  
} ATTR_PACKED tdf_lora_round_trip_t;
#define TDF_LORA_ROUND_TRIP_SIZE sizeof(tdf_lora_round_trip_t)

typedef struct tdf_lora_recv {
    uint32_t ID;  
    int16_t RSSI;  
    int8_t RSNR;  
    uint8_t SEQ_NO;  
} ATTR_PACKED tdf_lora_recv_t;
#define TDF_LORA_RECV_SIZE sizeof(tdf_lora_recv_t)

typedef struct tdf_loci_power {
    uint16_t batteryVoltage;  
    uint16_t solarCharge;  
} ATTR_PACKED tdf_loci_power_t;
#define TDF_LOCI_POWER_SIZE sizeof(tdf_loci_power_t)

typedef struct tdf_lps22hb_all {
    uint32_t pressure;  
    int16_t temperature;  
} ATTR_PACKED tdf_lps22hb_all_t;
#define TDF_LPS22HB_ALL_SIZE sizeof(tdf_lps22hb_all_t)

typedef struct tdf_sht31dis_all {
    uint16_t temperature;  
    uint16_t humidity;  
} ATTR_PACKED tdf_sht31dis_all_t;
#define TDF_SHT31DIS_ALL_SIZE sizeof(tdf_sht31dis_all_t)

typedef struct tdf_mpu9250_wom_interrupt {
    uint8_t thres;  
} ATTR_PACKED tdf_mpu9250_wom_interrupt_t;
#define TDF_MPU9250_WOM_INTERRUPT_SIZE sizeof(tdf_mpu9250_wom_interrupt_t)

typedef struct tdf_mpu9250_mag {
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mpu9250_mag_t;
#define TDF_MPU9250_MAG_SIZE sizeof(tdf_mpu9250_mag_t)

typedef struct tdf_opt3001 {
    uint16_t light;  
} ATTR_PACKED tdf_opt3001_t;
#define TDF_OPT3001_SIZE sizeof(tdf_opt3001_t)

typedef struct tdf_vpdad_jumbo {
    int32_t gps_lat;  
    int32_t gps_lon;  
    uint16_t battery_voltage;  
    uint16_t dad_event_count;  
    uint16_t min_since_deter;  
    uint16_t last_deter_sound;  
    uint32_t cumulative_deter_time;  
} ATTR_PACKED tdf_vpdad_jumbo_t;
#define TDF_VPDAD_JUMBO_SIZE sizeof(tdf_vpdad_jumbo_t)

typedef struct tdf_relay_jumbo {
    uint16_t VOLTAGE;  
    uint16_t reset_count;  
    int32_t gps_lat;  
    int32_t gps_lon;  
} ATTR_PACKED tdf_relay_jumbo_t;
#define TDF_RELAY_JUMBO_SIZE sizeof(tdf_relay_jumbo_t)

typedef struct tdf_nw_nodeid_assign {
    uint16_t NW_NODEID_type;  
    uint32_t NW_NODEID_device_id;  
    uint8_t fport;  
} ATTR_PACKED tdf_nw_nodeid_assign_t;
#define TDF_NW_NODEID_ASSIGN_SIZE sizeof(tdf_nw_nodeid_assign_t)

typedef struct tdf_vpdad_test {
    uint8_t mask;  
} ATTR_PACKED tdf_vpdad_test_t;
#define TDF_VPDAD_TEST_SIZE sizeof(tdf_vpdad_test_t)

typedef struct tdf_lorawan_link {
    int16_t rssi;  
    int8_t snr;  
    int16_t packet_strength;  
} ATTR_PACKED tdf_lorawan_link_t;
#define TDF_LORAWAN_LINK_SIZE sizeof(tdf_lorawan_link_t)

typedef struct tdf_ms5837 {
    uint32_t pressure;  
    int16_t temperature;  
} ATTR_PACKED tdf_ms5837_t;
#define TDF_MS5837_SIZE sizeof(tdf_ms5837_t)

typedef struct tdf_pir_trigger {
    uint16_t mask;  
} ATTR_PACKED tdf_pir_trigger_t;
#define TDF_PIR_TRIGGER_SIZE sizeof(tdf_pir_trigger_t)

typedef struct tdf_gps_llh {
    int32_t lat;  
    int32_t lon;  
    int32_t height;  
} ATTR_PACKED tdf_gps_llh_t;
#define TDF_GPS_LLH_SIZE sizeof(tdf_gps_llh_t)

typedef struct tdf_gps_compact {
    int32_t lat;  
    int32_t lon;  
    int32_t height;  
    uint16_t accuracy;  
    int16_t heading;  
    uint16_t speed;  
} ATTR_PACKED tdf_gps_compact_t;
#define TDF_GPS_COMPACT_SIZE sizeof(tdf_gps_compact_t)

typedef struct tdf_conduit_power {
    uint16_t batteryVoltage;  
} ATTR_PACKED tdf_conduit_power_t;
#define TDF_CONDUIT_POWER_SIZE sizeof(tdf_conduit_power_t)

typedef struct tdf_oystag_heart_stats {
    uint8_t range;  
    uint16_t variance;  
} ATTR_PACKED tdf_oystag_heart_stats_t;
#define TDF_OYSTAG_HEART_STATS_SIZE sizeof(tdf_oystag_heart_stats_t)

typedef struct tdf_salt_water_switch {
    uint8_t submerged;  
} ATTR_PACKED tdf_salt_water_switch_t;
#define TDF_SALT_WATER_SWITCH_SIZE sizeof(tdf_salt_water_switch_t)

typedef struct tdf_gps_lock_stats {
    int32_t lat;  
    int32_t lon;  
    uint16_t lock_time_sum;  
    uint16_t lock_time_var;  
    uint16_t lock_time_num;  
} ATTR_PACKED tdf_gps_lock_stats_t;
#define TDF_GPS_LOCK_STATS_SIZE sizeof(tdf_gps_lock_stats_t)

typedef struct tdf_turtag_diag {
    uint16_t battery_voltage;  
    uint32_t uptime;  
} ATTR_PACKED tdf_turtag_diag_t;
#define TDF_TURTAG_DIAG_SIZE sizeof(tdf_turtag_diag_t)

typedef struct tdf_turtag_solar {
    uint8_t mean_solar_1; // Average current in this bin 
    uint8_t mean_solar_2; // Average current in this bin 
    uint8_t mean_solar_3; // Average current in this bin 
    uint8_t mean_solar_4; // Average current in this bin 
    uint8_t mean_solar_5; // Average current in this bin 
    uint8_t percentage_samples_1; // Portion of time spent in this bin 
    uint8_t percentage_samples_2; // Portion of time spent in this bin 
    uint8_t percentage_samples_3; // Portion of time spent in this bin 
    uint8_t percentage_samples_4; // Portion of time spent in this bin 
    uint8_t percentage_samples_5; // Portion of time spent in this bin 
    uint32_t N; // Total samples taken 
} ATTR_PACKED tdf_turtag_solar_t;
#define TDF_TURTAG_SOLAR_SIZE sizeof(tdf_turtag_solar_t)

typedef struct tdf_turtag_gps_slim {
    int32_t lat;  
    int32_t lon;  
} ATTR_PACKED tdf_turtag_gps_slim_t;
#define TDF_TURTAG_GPS_SLIM_SIZE sizeof(tdf_turtag_gps_slim_t)

typedef struct tdf_turtag_dive {
    uint16_t sum;  
    uint16_t num;  
    uint16_t var;  
    uint16_t time_sum;  
    uint16_t time_var;  
} ATTR_PACKED tdf_turtag_dive_t;
#define TDF_TURTAG_DIVE_SIZE sizeof(tdf_turtag_dive_t)

typedef struct tdf_turtag_surface {
    uint16_t num;  
    uint16_t time_sum;  
    uint16_t time_var;  
    uint16_t time_max;  
    uint8_t time_min;  
} ATTR_PACKED tdf_turtag_surface_t;
#define TDF_TURTAG_SURFACE_SIZE sizeof(tdf_turtag_surface_t)

typedef struct tdf_gps_fail_stats {
    uint16_t flags;  
    uint16_t time_taken;  
} ATTR_PACKED tdf_gps_fail_stats_t;
#define TDF_GPS_FAIL_STATS_SIZE sizeof(tdf_gps_fail_stats_t)

typedef struct tdf_turtag_solar_flash {
    uint8_t solar_current;  
    uint8_t depth;  
} ATTR_PACKED tdf_turtag_solar_flash_t;
#define TDF_TURTAG_SOLAR_FLASH_SIZE sizeof(tdf_turtag_solar_flash_t)

typedef struct tdf_turtag_depth {
    uint16_t max;  
    uint16_t mean;  
    uint16_t var;  
} ATTR_PACKED tdf_turtag_depth_t;
#define TDF_TURTAG_DEPTH_SIZE sizeof(tdf_turtag_depth_t)

typedef struct tdf_cvm_info {
    uint16_t batt_voltage;  
    uint16_t temperature;  
    uint16_t RAM_usage;  
    uint16_t disk_usage;  
} ATTR_PACKED tdf_cvm_info_t;
#define TDF_CVM_INFO_SIZE sizeof(tdf_cvm_info_t)

typedef struct tdf_ms5837_compact {
    uint16_t pressure;  
    int8_t temperature;  
} ATTR_PACKED tdf_ms5837_compact_t;
#define TDF_MS5837_COMPACT_SIZE sizeof(tdf_ms5837_compact_t)

typedef struct tdf_ceres_solar {
    uint16_t voltage;  
} ATTR_PACKED tdf_ceres_solar_t;
#define TDF_CERES_SOLAR_SIZE sizeof(tdf_ceres_solar_t)

typedef struct tdf_lora_rssi {
    int16_t rssi;  
} ATTR_PACKED tdf_lora_rssi_t;
#define TDF_LORA_RSSI_SIZE sizeof(tdf_lora_rssi_t)

typedef struct tdf_turtag_basic {
    uint8_t prev_surface_time;  
    uint16_t dive_time;  
    uint16_t maximum_depth;  
    uint16_t uptime;  
    uint16_t battery_voltage;  
    uint8_t solar_charge_ave;  
    uint8_t temperature_ave;  
} ATTR_PACKED tdf_turtag_basic_t;
#define TDF_TURTAG_BASIC_SIZE sizeof(tdf_turtag_basic_t)

typedef struct tdf_device_status_ble {
    int32_t lat;  
    int32_t lon;  
    uint16_t batteryVoltage;  
    uint16_t page;  
    uint8_t flag;  
} ATTR_PACKED tdf_device_status_ble_t;
#define TDF_DEVICE_STATUS_BLE_SIZE sizeof(tdf_device_status_ble_t)

typedef struct tdf_ezo_spare {
    uint16_t ezo_;  
} ATTR_PACKED tdf_ezo_spare_t;
#define TDF_EZO_SPARE_SIZE sizeof(tdf_ezo_spare_t)

typedef struct tdf_lora_stats {
    int16_t rssi;  
    int8_t snr;  
} ATTR_PACKED tdf_lora_stats_t;
#define TDF_LORA_STATS_SIZE sizeof(tdf_lora_stats_t)

typedef struct tdf_pacp2_pinger_voltage {
    uint16_t batteryVoltage;  
} ATTR_PACKED tdf_pacp2_pinger_voltage_t;
#define TDF_PACP2_PINGER_VOLTAGE_SIZE sizeof(tdf_pacp2_pinger_voltage_t)

typedef struct tdf_vpdad_jumbo_small {
    int32_t gps_lat;  
    int32_t gps_lon;  
    uint16_t battery_voltage;  
    uint32_t cumulative_deter_time;  
} ATTR_PACKED tdf_vpdad_jumbo_small_t;
#define TDF_VPDAD_JUMBO_SMALL_SIZE sizeof(tdf_vpdad_jumbo_small_t)

typedef struct tdf_ezo_orp {
    int32_t ezo_oxidation_reduction_potential;  
} ATTR_PACKED tdf_ezo_orp_t;
#define TDF_EZO_ORP_SIZE sizeof(tdf_ezo_orp_t)

typedef struct tdf_ezo_do {
    int32_t ezo_dissolved_oxygen;  
} ATTR_PACKED tdf_ezo_do_t;
#define TDF_EZO_DO_SIZE sizeof(tdf_ezo_do_t)

typedef struct tdf_ezo_ph {
    int32_t ezo_pH;  
} ATTR_PACKED tdf_ezo_ph_t;
#define TDF_EZO_PH_SIZE sizeof(tdf_ezo_ph_t)

typedef struct tdf_ezo_rtd {
    int32_t ezo_rtd_temperature;  
} ATTR_PACKED tdf_ezo_rtd_t;
#define TDF_EZO_RTD_SIZE sizeof(tdf_ezo_rtd_t)

typedef struct tdf_ezo_ec {
    int32_t ezo_ec_conductivity;  
} ATTR_PACKED tdf_ezo_ec_t;
#define TDF_EZO_EC_SIZE sizeof(tdf_ezo_ec_t)

typedef struct tdf_ezo_uk {
    int32_t ezo_unknown_sensor_type;  
} ATTR_PACKED tdf_ezo_uk_t;
#define TDF_EZO_UK_SIZE sizeof(tdf_ezo_uk_t)

typedef struct tdf_cvm_classification {
    uint32_t unixtime;  
    uint8_t class1;  
    uint8_t probability1;  
    uint8_t class2;  
    uint8_t probability2;  
} ATTR_PACKED tdf_cvm_classification_t;
#define TDF_CVM_CLASSIFICATION_SIZE sizeof(tdf_cvm_classification_t)

typedef struct tdf_unix_time {
    int64_t time64;  
} ATTR_PACKED tdf_unix_time_t;
#define TDF_UNIX_TIME_SIZE sizeof(tdf_unix_time_t)

typedef struct tdf_watchdog_info {
    char procName[8];  
    uint32_t programCounter;  
    uint32_t linkRegister;  
} ATTR_PACKED tdf_watchdog_info_t;
#define TDF_WATCHDOG_INFO_SIZE sizeof(tdf_watchdog_info_t)

// Complete UBX PVT Message
typedef struct tdf_gps_pvt {
    uint32_t valid_or_flags2;  
    uint32_t tacc;  
    uint8_t fixtype;  
    uint8_t flags;  
    uint8_t numsv;  
    int32_t lon;  
    int32_t lat;  
    int32_t height;  
    uint32_t hacc;  
    uint32_t vacc;  
    uint32_t gspeed;  
    int32_t headmot;  
    uint32_t sacc;  
    uint32_t headacc;  
    uint16_t pdop;  
} ATTR_PACKED tdf_gps_pvt_t;
#define TDF_GPS_PVT_SIZE sizeof(tdf_gps_pvt_t)

typedef struct tdf_gps_loc_count {
    uint8_t ping_count;  
} ATTR_PACKED tdf_gps_loc_count_t;
#define TDF_GPS_LOC_COUNT_SIZE sizeof(tdf_gps_loc_count_t)

typedef struct tdf_vpdad_sentinel {
    float voltage;  
    int8_t hdd_volume;  
    int8_t status;  
} ATTR_PACKED tdf_vpdad_sentinel_t;
#define TDF_VPDAD_SENTINEL_SIZE sizeof(tdf_vpdad_sentinel_t)

typedef struct tdf_3g_stats {
    int8_t main_ant;  
    int8_t aux_ant;  
} ATTR_PACKED tdf_3g_stats_t;
#define TDF_3G_STATS_SIZE sizeof(tdf_3g_stats_t)

typedef struct tdf_feral_jumbo {
    int32_t lat;  
    int32_t lon;  
    uint16_t batteryVoltage;  
    uint8_t pingCount;  
} ATTR_PACKED tdf_feral_jumbo_t;
#define TDF_FERAL_JUMBO_SIZE sizeof(tdf_feral_jumbo_t)

typedef struct tdf_mpu9250_ecompass_4g {
    int16_t accx;  
    int16_t accy;  
    int16_t accz;  
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mpu9250_ecompass_4g_t;
#define TDF_MPU9250_ECOMPASS_4G_SIZE sizeof(tdf_mpu9250_ecompass_4g_t)

typedef struct tdf_ubx_nav_sat {
    uint8_t gnssId;  
    uint8_t svId;  
    uint8_t cno;  
    int8_t elev;  
    int16_t azim;  
    int16_t prRes;  
    uint32_t flags;  
} ATTR_PACKED tdf_ubx_nav_sat_t;
#define TDF_UBX_NAV_SAT_SIZE sizeof(tdf_ubx_nav_sat_t)

typedef struct tdf_gps_feral_jumbo {
    int32_t lat;  
    int32_t lon;  
    uint16_t batteryVoltage;  
    uint8_t pingCount;  
} ATTR_PACKED tdf_gps_feral_jumbo_t;
#define TDF_GPS_FERAL_JUMBO_SIZE sizeof(tdf_gps_feral_jumbo_t)

typedef struct tdf_gps_latlon {
    int32_t lat;  
    int32_t lon;  
} ATTR_PACKED tdf_gps_latlon_t;
#define TDF_GPS_LATLON_SIZE sizeof(tdf_gps_latlon_t)

typedef struct tdf_relay_mdot_packet_stats {
    uint32_t rx_packet_count;  
    uint32_t tx_attempt_count;  
    uint32_t tx_success_count;  
    uint32_t dropped_packet_count;  
} ATTR_PACKED tdf_relay_mdot_packet_stats_t;
#define TDF_RELAY_MDOT_PACKET_STATS_SIZE sizeof(tdf_relay_mdot_packet_stats_t)

typedef struct tdf_tmp116 {
    int16_t temperature;  
} ATTR_PACKED tdf_tmp116_t;
#define TDF_TMP116_SIZE sizeof(tdf_tmp116_t)

typedef struct tdf_acc_stats {
    uint32_t norm;  
    uint32_t mean;  
    uint32_t variance;  
    int8_t classification;  
} ATTR_PACKED tdf_acc_stats_t;
#define TDF_ACC_STATS_SIZE sizeof(tdf_acc_stats_t)

typedef struct tdf_relay_loci_power {
    uint16_t batteryVoltage;  
    uint16_t solarCharge;  
} ATTR_PACKED tdf_relay_loci_power_t;
#define TDF_RELAY_LOCI_POWER_SIZE sizeof(tdf_relay_loci_power_t)

typedef struct tdf_gps_compact_relay {
    int32_t lat;  
    int32_t lon;  
    int32_t height;  
    uint16_t accuracy;  
    int16_t heading;  
    uint16_t speed;  
} ATTR_PACKED tdf_gps_compact_relay_t;
#define TDF_GPS_COMPACT_RELAY_SIZE sizeof(tdf_gps_compact_relay_t)

typedef struct tdf_relay_uptime {
    uint32_t uptime;  
} ATTR_PACKED tdf_relay_uptime_t;
#define TDF_RELAY_UPTIME_SIZE sizeof(tdf_relay_uptime_t)

typedef struct tdf_relay_rx_count {
    uint16_t countincrement;  
} ATTR_PACKED tdf_relay_rx_count_t;
#define TDF_RELAY_RX_COUNT_SIZE sizeof(tdf_relay_rx_count_t)

typedef struct tdf_relay_radio_stats {
    uint16_t srcaddr;  
    uint16_t pktnum;  
    int16_t rssi;  
    uint16_t lqi;  
} ATTR_PACKED tdf_relay_radio_stats_t;
#define TDF_RELAY_RADIO_STATS_SIZE sizeof(tdf_relay_radio_stats_t)

typedef struct tdf_relay_reset_stats {
    uint16_t num_resets;  
    uint8_t reset_reason;  
} ATTR_PACKED tdf_relay_reset_stats_t;
#define TDF_RELAY_RESET_STATS_SIZE sizeof(tdf_relay_reset_stats_t)

typedef struct tdf_classification {
    uint8_t dict;  
    uint32_t type;  
} ATTR_PACKED tdf_classification_t;
#define TDF_CLASSIFICATION_SIZE sizeof(tdf_classification_t)

typedef struct tdf_lora_debug_pkt {
    uint64_t zero;  
    uint64_t one;  
    uint64_t two;  
    uint64_t three;  
    uint64_t four;  
    uint64_t five;  
    uint64_t six;  
    uint64_t seven;  
} ATTR_PACKED tdf_lora_debug_pkt_t;
#define TDF_LORA_DEBUG_PKT_SIZE sizeof(tdf_lora_debug_pkt_t)

typedef struct tdf_telemetry_diagnostic {
    uint16_t battery_voltage;  
    uint16_t transmit_count;  
    uint16_t rx_timeout_count;  
    uint8_t send_fail_count;  
    uint8_t error_count;  
    uint8_t reserved;  
} ATTR_PACKED tdf_telemetry_diagnostic_t;
#define TDF_TELEMETRY_DIAGNOSTIC_SIZE sizeof(tdf_telemetry_diagnostic_t)

typedef struct tdf_contact_slot {
    uint8_t slot;  
} ATTR_PACKED tdf_contact_slot_t;
#define TDF_CONTACT_SLOT_SIZE sizeof(tdf_contact_slot_t)

typedef struct tdf_cc2650_contact_log {
    uint16_t source;  
    int8_t rssi;  
    uint8_t lqi;  
} ATTR_PACKED tdf_cc2650_contact_log_t;
#define TDF_CC2650_CONTACT_LOG_SIZE sizeof(tdf_cc2650_contact_log_t)

typedef struct tdf_water_conductivity {
    uint8_t conductivity;  
} ATTR_PACKED tdf_water_conductivity_t;
#define TDF_WATER_CONDUCTIVITY_SIZE sizeof(tdf_water_conductivity_t)

typedef struct tdf_bleat_asset {
    uint16_t asset_type;  
    uint8_t asset_sub_type;  
    int32_t x_offset;  
    int32_t y_offset;  
    int16_t z_offset;  
    uint16_t battery_voltage;  
    uint8_t state;  
} ATTR_PACKED tdf_bleat_asset_t;
#define TDF_BLEAT_ASSET_SIZE sizeof(tdf_bleat_asset_t)

typedef struct tdf_bleat_asset_ll {
    uint16_t asset_type;  
    uint8_t asset_sub_type;  
    int32_t lat;  
    int32_t lon;  
    uint16_t height;  
    uint16_t battery_voltage;  
    uint8_t state;  
} ATTR_PACKED tdf_bleat_asset_ll_t;
#define TDF_BLEAT_ASSET_LL_SIZE sizeof(tdf_bleat_asset_ll_t)

typedef struct tdf_bleat_asset_ll_compact {
    uint16_t asset_type;  
    int32_t lat;  
    int32_t lon;  
    uint16_t height;  
} ATTR_PACKED tdf_bleat_asset_ll_compact_t;
#define TDF_BLEAT_ASSET_LL_COMPACT_SIZE sizeof(tdf_bleat_asset_ll_compact_t)

typedef struct tdf_scheduler_state_set {
    uint8_t state_id;  
} ATTR_PACKED tdf_scheduler_state_set_t;
#define TDF_SCHEDULER_STATE_SET_SIZE sizeof(tdf_scheduler_state_set_t)

typedef struct tdf_scheduler_state_clear {
    uint8_t state_id;  
} ATTR_PACKED tdf_scheduler_state_clear_t;
#define TDF_SCHEDULER_STATE_CLEAR_SIZE sizeof(tdf_scheduler_state_clear_t)

typedef struct tdf_scheduler_state_time {
    uint8_t state_id;  
    uint32_t elapsed_time;  
} ATTR_PACKED tdf_scheduler_state_time_t;
#define TDF_SCHEDULER_STATE_TIME_SIZE sizeof(tdf_scheduler_state_time_t)

typedef struct tdf_diagnostic_base_time {
    uint16_t count_increment;  
} ATTR_PACKED tdf_diagnostic_base_time_t;
#define TDF_DIAGNOSTIC_BASE_TIME_SIZE sizeof(tdf_diagnostic_base_time_t)

typedef struct tdf_diagnostic_node_time {
    uint16_t count_increment;  
} ATTR_PACKED tdf_diagnostic_node_time_t;
#define TDF_DIAGNOSTIC_NODE_TIME_SIZE sizeof(tdf_diagnostic_node_time_t)

typedef struct tdf_piezo {
    uint16_t energy;  
    uint16_t filtered;  
    uint16_t raw;  
} ATTR_PACKED tdf_piezo_t;
#define TDF_PIEZO_SIZE sizeof(tdf_piezo_t)

typedef struct tdf_gps_measurement {
    int32_t lat;  
    int32_t lon;  
    uint32_t hacc;  
    uint16_t pdop;  
    uint8_t numsv;  
    uint8_t ttff;  
    uint16_t sequence;  
} ATTR_PACKED tdf_gps_measurement_t;
#define TDF_GPS_MEASUREMENT_SIZE sizeof(tdf_gps_measurement_t)

typedef struct tdf_sts31 {
    int32_t temperature;  
} ATTR_PACKED tdf_sts31_t;
#define TDF_STS31_SIZE sizeof(tdf_sts31_t)

typedef struct tdf_acc_xyz_signed {
    int16_t x;  
    int16_t y;  
    int16_t z;  
} ATTR_PACKED tdf_acc_xyz_signed_t;
#define TDF_ACC_XYZ_SIGNED_SIZE sizeof(tdf_acc_xyz_signed_t)

// Duplicate of information sent over Sigfox
typedef struct tdf_ceres_jumbo {
    int32_t lat;  
    int32_t lon;  
    uint8_t hacc;  
    uint8_t temperature;  
    uint8_t battery;  
    uint16_t activity;  
    uint8_t alert;  
} ATTR_PACKED tdf_ceres_jumbo_t;
#define TDF_CERES_JUMBO_SIZE sizeof(tdf_ceres_jumbo_t)

typedef struct tdf_battery_stats {
    uint16_t battery_voltage;  
    uint16_t charge_current;  
} ATTR_PACKED tdf_battery_stats_t;
#define TDF_BATTERY_STATS_SIZE sizeof(tdf_battery_stats_t)

typedef struct tdf_bleatcon_lat_lng {
    int32_t lat;  
    int32_t lon;  
    uint16_t height;  
} ATTR_PACKED tdf_bleatcon_lat_lng_t;
#define TDF_BLEATCON_LAT_LNG_SIZE sizeof(tdf_bleatcon_lat_lng_t)

typedef struct tdf_relay_id {
    uint16_t RelayID;  
} ATTR_PACKED tdf_relay_id_t;
#define TDF_RELAY_ID_SIZE sizeof(tdf_relay_id_t)

typedef struct tdf_bleacon_jumbo {
    uint16_t RelayID;  
    int32_t lat;  
    int32_t lon;  
    uint16_t height;  
} ATTR_PACKED tdf_bleacon_jumbo_t;
#define TDF_BLEACON_JUMBO_SIZE sizeof(tdf_bleacon_jumbo_t)

typedef struct tdf_bleat_asset_jumbo {
    uint16_t asset_type;  
    uint8_t asset_sub_type;  
    int32_t lat;  
    int32_t lon;  
    uint16_t height;  
    uint16_t battery_voltage;  
    uint8_t state;  
    int8_t beacon_count;  
} ATTR_PACKED tdf_bleat_asset_jumbo_t;
#define TDF_BLEAT_ASSET_JUMBO_SIZE sizeof(tdf_bleat_asset_jumbo_t)

// Used to indicate when logger pages have been lost
typedef struct tdf_lost_data {
    uint32_t page;  
} ATTR_PACKED tdf_lost_data_t;
#define TDF_LOST_DATA_SIZE sizeof(tdf_lost_data_t)

// GPS lock location and accuracy, and statistics of previous lock times.
typedef struct tdf_gps_lock_stats_acc {
    int32_t lat;  
    int32_t lon;  
    uint32_t hacc; // horizontal accuracy (m) 
    uint16_t lock_time_sum;  
    uint16_t lock_time_var;  
    uint16_t lock_time_num;  
} ATTR_PACKED tdf_gps_lock_stats_acc_t;
#define TDF_GPS_LOCK_STATS_ACC_SIZE sizeof(tdf_gps_lock_stats_acc_t)

typedef struct tdf_accel_variance {
    int32_t x;  
    int32_t y;  
    int32_t z;  
} ATTR_PACKED tdf_accel_variance_t;
#define TDF_ACCEL_VARIANCE_SIZE sizeof(tdf_accel_variance_t)

// TDF for the StatsSummary object in 
typedef struct tdf_stats_summary {
    int32_t variance; // Varience 
    int32_t last; // The last value logged 
    int32_t mean; // The average value logged 
    int32_t max; // The maximum value logged 
    int32_t min; // The minimum value logged 
    int32_t sum; // The maximum value logged 
    uint32_t n; // The number of data points logged. 
} ATTR_PACKED tdf_stats_summary_t;
#define TDF_STATS_SUMMARY_SIZE sizeof(tdf_stats_summary_t)

// Jumbo TDF for common system information, enough information for python scripts to run
typedef struct tdf_system_announce {
    uint8_t major; // APP_MAJOR 
    uint8_t minor; // APP_MINOR 
    uint32_t uptime; // Time since last reboot 
    uint16_t reboots; // Total reboots since programming 
    uint32_t flash_page; // Current flash page counter 
} ATTR_PACKED tdf_system_announce_t;
#define TDF_SYSTEM_ANNOUNCE_SIZE sizeof(tdf_system_announce_t)

typedef struct tdf_dtree_class {
    uint8_t Classification; // Classification 
} ATTR_PACKED tdf_dtree_class_t;
#define TDF_DTREE_CLASS_SIZE sizeof(tdf_dtree_class_t)

// sum over 5 mins of classsification
typedef struct tdf_dtree_class_sum {
    uint8_t grazing;  
    uint8_t resting;  
    uint8_t rumination;  
    uint8_t other;  
} ATTR_PACKED tdf_dtree_class_sum_t;
#define TDF_DTREE_CLASS_SUM_SIZE sizeof(tdf_dtree_class_sum_t)

typedef struct tdf_dtree_grad_var {
    uint64_t x;  
    uint64_t y;  
    uint64_t z;  
} ATTR_PACKED tdf_dtree_grad_var_t;
#define TDF_DTREE_GRAD_VAR_SIZE sizeof(tdf_dtree_grad_var_t)

typedef struct tdf_water {
    uint16_t level;  
    uint16_t battery_voltage;  
    int16_t rssi;  
} ATTR_PACKED tdf_water_t;
#define TDF_WATER_SIZE sizeof(tdf_water_t)

typedef struct tdf_pin_status {
    int8_t status; // 1 = rising edge, -1 = falling edge.  
} ATTR_PACKED tdf_pin_status_t;
#define TDF_PIN_STATUS_SIZE sizeof(tdf_pin_status_t)

// the appsettings of the CSIROTRACK application lachlan. will change this if needed  
typedef struct tdf_csirotrack_app_settings {
    uint16_t key;  
    uint16_t resetCount;  
    uint16_t mpu_sample_rate_Hz;  
    uint16_t gps_sample_period_minutes;  
    uint16_t gps_on_time_second;  
    uint16_t gps_off_condition;  
    uint16_t gps_mode;  
    uint16_t lora_period_second;  
    uint8_t mpu_op_mode;  
    uint8_t lora_send;  
    uint8_t debug_level;  
    uint8_t microclimate;  
    uint16_t env_period_second;  
    uint8_t contact_log;  
    uint8_t psuedowatchdog_timeout;  
    uint32_t grenade_timeout;  
    uint8_t motion_classifier;  
    uint8_t energy_neutral_sensing;  
    uint8_t mpu_g_range;  
    uint8_t start_mode;  
    uint32_t start_time;  
    uint32_t end_time;  
} ATTR_PACKED tdf_csirotrack_app_settings_t;
#define TDF_CSIROTRACK_APP_SETTINGS_SIZE sizeof(tdf_csirotrack_app_settings_t)

// Sends back the infringment with enum tyoe
typedef struct tdf_infringement_notification {
    uint8_t infringement; // infringement 
} ATTR_PACKED tdf_infringement_notification_t;
#define TDF_INFRINGEMENT_NOTIFICATION_SIZE sizeof(tdf_infringement_notification_t)

// Smaller version of WATCHDOG_INFO that fits in the bluetooth logger
typedef struct tdf_watchdog_info_small {
    char procName[5];  
    uint32_t programCounter;  
    uint32_t linkRegister;  
} ATTR_PACKED tdf_watchdog_info_small_t;
#define TDF_WATCHDOG_INFO_SMALL_SIZE sizeof(tdf_watchdog_info_small_t)

// Smaller version of CERES_JUMBO to fit in new bluetooth logger
typedef struct tdf_ceres_jumbo_small {
    uint32_t lat;  
    uint32_t lon;  
    uint8_t hacc;  
    uint8_t temperature;  
    uint8_t battery;  
    uint8_t activity;  
    uint8_t alert;  
} ATTR_PACKED tdf_ceres_jumbo_small_t;
#define TDF_CERES_JUMBO_SMALL_SIZE sizeof(tdf_ceres_jumbo_small_t)

// TDF Version of the Ceres Tag Globalstar location packet
typedef struct tdf_ceres_gs_location {
    uint32_t lat; // GPS Latitude in 24bit format 
    uint32_t lon; // GPS Longitude in 24bit format 
    uint8_t hacc;  
    uint8_t battery;  
    uint16_t activity;  
} ATTR_PACKED tdf_ceres_gs_location_t;
#define TDF_CERES_GS_LOCATION_SIZE sizeof(tdf_ceres_gs_location_t)

typedef struct tdf_env_temperature {
    int32_t temperature; // Converted temperature 
} ATTR_PACKED tdf_env_temperature_t;
#define TDF_ENV_TEMPERATURE_SIZE sizeof(tdf_env_temperature_t)

// Converted temperature, humidity and pressure readings
typedef struct tdf_env_tmp_hum_pre {
    int32_t temperature; // Millidegrees celsius 
    uint8_t humidity; // Relative humidity percentage 
    uint32_t pressure; // Decipascal (Pascal / 10) 
} ATTR_PACKED tdf_env_tmp_hum_pre_t;
#define TDF_ENV_TMP_HUM_PRE_SIZE sizeof(tdf_env_tmp_hum_pre_t)

typedef struct tdf_csirotrack_hourly {
    uint32_t uptime;  
    uint8_t appinfo_major;  
    uint8_t appinfo_minor;  
    uint32_t buildtime;  
    uint32_t sd_page_num;  
    uint16_t reset_count;  
} ATTR_PACKED tdf_csirotrack_hourly_t;
#define TDF_CSIROTRACK_HOURLY_SIZE sizeof(tdf_csirotrack_hourly_t)

typedef struct tdf_csirotrack_env {
    uint16_t batteryVoltage;  
    uint16_t solarCharge;  
    uint32_t lps22Pressure;  
    int16_t lps22Temp;  
    uint16_t sht31Humid;  
} ATTR_PACKED tdf_csirotrack_env_t;
#define TDF_CSIROTRACK_ENV_SIZE sizeof(tdf_csirotrack_env_t)

typedef struct tdf_mpu9250_raw {
    int16_t accx; // accx 
    int16_t accy; // accy 
    int16_t accz;  
    int16_t temp;  
    int16_t gyrox;  
    int16_t gyroy;  
    int16_t gyroz;  
    int16_t magx;  
    int16_t magy;  
    int16_t magz;  
} ATTR_PACKED tdf_mpu9250_raw_t;
#define TDF_MPU9250_RAW_SIZE sizeof(tdf_mpu9250_raw_t)

typedef struct tdf_gps_csirotrack {
    int32_t lat;  
    int32_t lon;  
    uint16_t accuracy;  
    uint8_t pdop;  
    uint8_t fix;  
    uint8_t numsv;  
    uint8_t flags;  
} ATTR_PACKED tdf_gps_csirotrack_t;
#define TDF_GPS_CSIROTRACK_SIZE sizeof(tdf_gps_csirotrack_t)

typedef struct tdf_hdc1000 {
    uint16_t temperature;  
    uint16_t humidity;  
} ATTR_PACKED tdf_hdc1000_t;
#define TDF_HDC1000_SIZE sizeof(tdf_hdc1000_t)

typedef struct tdf_bite_count {
    uint8_t count; // classified bite count 
    uint8_t grazing_count; // number of times that other classifier returned grazing in the window  
} ATTR_PACKED tdf_bite_count_t;
#define TDF_BITE_COUNT_SIZE sizeof(tdf_bite_count_t)

typedef struct tdf_egrazor_clas_sum {
    uint8_t grazing;  
    uint8_t walking;  
    uint8_t ruminating;  
    uint8_t resting;  
    uint8_t other;  
} ATTR_PACKED tdf_egrazor_clas_sum_t;
#define TDF_EGRAZOR_CLAS_SUM_SIZE sizeof(tdf_egrazor_clas_sum_t)

typedef struct tdf_acc_rollpitch {
    float roll_angle; // degrees 
    float pitch_angle; // degrees 
} ATTR_PACKED tdf_acc_rollpitch_t;
#define TDF_ACC_ROLLPITCH_SIZE sizeof(tdf_acc_rollpitch_t)

// Engineering data for BLEAT devices
typedef struct tdf_bleat_settings {
    uint32_t client_key; // Last 4 bytes of client key 
    int8_t bt_tx_power;  
    uint16_t bt_tx_int_pas; // Bluetooth base transmit interval in millisec 
    uint16_t bt_tx_int_act; // Bluetooth active transmit interval in millisec 
    uint16_t bt_rx_delay_pas; // Bluetooth base scanning interval in millisec 
    uint16_t bt_rx_delay_act; // Bluetooth active scanning interval in millisec 
    uint16_t bt_scan_wind_pas; // Bluetooth base scanning window in millisec 
    uint16_t bt_scan_wind_act; // Bluetooth active scanning window in millisec 
} ATTR_PACKED tdf_bleat_settings_t;
#define TDF_BLEAT_SETTINGS_SIZE sizeof(tdf_bleat_settings_t)

typedef struct tdf_bleat_status {
    uint32_t uptime;  
    uint16_t resetcount;  
    uint16_t batterylevel;  
} ATTR_PACKED tdf_bleat_status_t;
#define TDF_BLEAT_STATUS_SIZE sizeof(tdf_bleat_status_t)

typedef struct tdf_bleacon_status_data {
    uint32_t battery_voltage;  
    uint8_t mac_status;  
    uint16_t packet_tx_number;  
    uint8_t packet_tx_size;  
    uint8_t data_rate;  
} ATTR_PACKED tdf_bleacon_status_data_t;
#define TDF_BLEACON_STATUS_DATA_SIZE sizeof(tdf_bleacon_status_data_t)

// Last transmitted Globalstar packet
typedef struct tdf_ct_globalstar_echo {
    char payload[9]; // Raw payload bytes 
    uint32_t gen_time; // Time payload was generated (Unix) 
} ATTR_PACKED tdf_ct_globalstar_echo_t;
#define TDF_CT_GLOBALSTAR_ECHO_SIZE sizeof(tdf_ct_globalstar_echo_t)

typedef struct tdf_bleat_location {
    int32_t Latitude;  
    int32_t Longitude;  
    int16_t Height;  
} ATTR_PACKED tdf_bleat_location_t;
#define TDF_BLEAT_LOCATION_SIZE sizeof(tdf_bleat_location_t)

// Accelerometer sampled at 2G range
typedef struct tdf_acc_xyz_2g {
    int16_t x;  
    int16_t y;  
    int16_t z;  
} ATTR_PACKED tdf_acc_xyz_2g_t;
#define TDF_ACC_XYZ_2G_SIZE sizeof(tdf_acc_xyz_2g_t)

// Accelerometer sampled at 4G range
typedef struct tdf_acc_xyz_4g {
    int16_t x;  
    int16_t y;  
    int16_t z;  
} ATTR_PACKED tdf_acc_xyz_4g_t;
#define TDF_ACC_XYZ_4G_SIZE sizeof(tdf_acc_xyz_4g_t)

// Accelerometer sampled at 8G range
typedef struct tdf_acc_xyz_8g {
    int16_t x;  
    int16_t y;  
    int16_t z;  
} ATTR_PACKED tdf_acc_xyz_8g_t;
#define TDF_ACC_XYZ_8G_SIZE sizeof(tdf_acc_xyz_8g_t)

// Accelerometer sampled at 16G range
typedef struct tdf_acc_xyz_16g {
    int16_t x;  
    int16_t y;  
    int16_t z;  
} ATTR_PACKED tdf_acc_xyz_16g_t;
#define TDF_ACC_XYZ_16G_SIZE sizeof(tdf_acc_xyz_16g_t)

// Generic event occurred with ID
typedef struct tdf_generic_event {
    uint8_t id;  
} ATTR_PACKED tdf_generic_event_t;
#define TDF_GENERIC_EVENT_SIZE sizeof(tdf_generic_event_t)

typedef struct tdf_scheduler_error {
    uint8_t activity_id;  
    uint8_t action;  
    uint32_t activity_pc;  
} ATTR_PACKED tdf_scheduler_error_t;
#define TDF_SCHEDULER_ERROR_SIZE sizeof(tdf_scheduler_error_t)


// clang-format on
/* Function Declarations ------------------------------------*/

#endif /* __CORE_CSIRO_LIBRARIES_TDF_STRUCT */
