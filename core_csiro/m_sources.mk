##############################################################################
# Embedded Compiler Category (GCC, IAR, etc)
##############################################################################

COMPILER            := GCC
BUILD_TIMESTAMP     := $(shell date -u +%s)
# Current git commit hash as a hex string e.g. "\x32\x65\x54 ..."
# Commands converts a string "1234abcd" to a doubly escaped \\x12\\x34\\xab\\xcd
# Do not touch unless providing a more readable implementation
COMMIT_HASH			:= \"\\x$(shell git rev-parse HEAD | sed 's/../&\\\\x/g;s/\\\\x$$//')\"

##############################################################################
# Application Source Files
##############################################################################

# Application sources
APPLICATION_SRCS 	+= $(wildcard $(SRC_DIR)/*.c)
# RPC files are filtered out here but specific target version added back in under GENERATED_SRCS
APPLICATION_SRCS 	:= $(filter-out $(wildcard $(SRC_DIR)/rpc_server*.c), $(APPLICATION_SRCS))
APPLICATION_SRCS 	:= $(filter-out $(wildcard $(SRC_DIR)/rpc_client*.c), $(APPLICATION_SRCS))
APPLICATION_SRCS 	:= $(filter-out $(wildcard $(SRC_DIR)/gatt_efr32.c), $(APPLICATION_SRCS))
APPLICATION_SRCS 	:= $(filter-out $(wildcard $(SRC_DIR)/gatt_nrf52.c), $(APPLICATION_SRCS))

APPLICATION_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/scheduler/activities/src/*.c)

# .weak function overrides must be included here, otherwise they aren't overwritten properly
APPLICATION_SRCS 	+= $(CORE_CSIRO_DIR)/arch/common/FreeRTOS/src/rtos_hooks.c
APPLICATION_SRCS 	+= $(CORE_CSIRO_DIR)/arch/common/FreeRTOS/src/heap_1.c
APPLICATION_SRCS	+= $(CORE_CSIRO_DIR)/arch/common/nvm/src/device_nvm_keys.c
APPLICATION_SRCS 	+= $(wildcard $(CSIRO_ARCH_DIR)/cpu/$(CPU_VARIANT)/src/*)

##############################################################################
# Autogenerated Files
##############################################################################

# Source files which are automatically generated
GENERATED_SRCS      += $(CORE_CSIRO_DIR)/platform/common/src/build_info.c

##############################################################################
# Core CSIRO Files
##############################################################################
	
# SoC Specific Files
CORE_CSIRO_SRCS		+= $(wildcard $(CORE_CSIRO_DIR)/arch/common/bluetooth/src/*.c)
CORE_CSIRO_SRCS		+= $(wildcard $(CORE_CSIRO_DIR)/arch/common/interface/src/*.c)
CORE_CSIRO_SRCS 	+= $(wildcard $(CSIRO_ARCH_DIR)/bluetooth/src/*.c)
CORE_CSIRO_SRCS 	+= $(wildcard $(CSIRO_ARCH_DIR)/interface/src/*.c)
CORE_CSIRO_SRCS 	+= $(wildcard $(CSIRO_ARCH_DIR)/nvm/src/*.c)
CORE_CSIRO_SRCS 	+= $(wildcard $(CSIRO_ARCH_DIR)/watchdog/src/*.c)

# Platform specific drivers
CORE_CSIRO_SRCS 	+= $(CORE_CSIRO_DIR)/platform/common/src/application_defaults.c
CORE_CSIRO_SRCS 	+= $(CORE_CSIRO_DIR)/platform/common/src/board_defaults.c
CORE_CSIRO_SRCS 	+= $(CORE_CSIRO_DIR)/platform/common/src/main.c
CORE_CSIRO_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/platform/$(TARGET)/src/*.c)

# Libraries
CORE_CSIRO_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/interfaces/src/*.c)
CORE_CSIRO_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/libraries/src/*.c)
CORE_CSIRO_SRCS		+= $(wildcard $(CORE_CSIRO_DIR)/batteries/src/*.c)

# Loggers
CORE_CSIRO_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/loggers/src/*.c)

# Communications
CORE_CSIRO_SRCS 	+= $(wildcard $(CORE_CSIRO_DIR)/comms/src/*.c)

# Utility Peripherals
CORE_CSIRO_SRCS		+= $(wildcard $(CSIRO_PERIPH_DIR)/utility/src/*.c)

# Include paths, Ordered by Priority
CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/platform/$(TARGET)/inc

CORE_CSIRO_INCS		+= $(wildcard $(CSIRO_ARCH_DIR)/*/inc)
CORE_CSIRO_INCS		+= $(wildcard $(CSIRO_PERIPH_DIR)/*/inc)

CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/comms/inc
CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/common/inc
CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/interfaces/inc
CORE_CSIRO_INCS		+= $(CORE_CSIRO_DIR)/libraries/inc
CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/loggers/inc
CORE_CSIRO_INCS		+= $(CORE_CSIRO_DIR)/batteries/inc

CORE_CSIRO_INCS 	+= $(CORE_CSIRO_DIR)/platform/common/inc
CORE_CSIRO_INCS		+= $(wildcard $(CORE_CSIRO_DIR)/arch/common/*/inc)

##############################################################################
# Common Architecture Specific Libraries
##############################################################################

ARCH_LIBS			+= CORE_ARCH

CORE_ARCH_SRCS		:= $(wildcard $(PRINTF_DIR)/src/*.c)
CORE_ARCH_SRCS		+= $(wildcard $(SWD_DIR)/SEGGER_RTT.c)	

CORE_ARCH_SYS_INCS	:= $(PRINTF_DIR)/inc
CORE_ARCH_SYS_INCS	+= $(SWD_DIR)

##############################################################################
# Common Platform Specific Libraries
##############################################################################

PLATFORM_LIBS			+= CORE_FREERTOS

CORE_FREERTOS_SRCS		:= $(wildcard $(FREERTOS_DIR)/*.c)
CORE_FREERTOS_SRCS		+= $(wildcard $(FREERTOS_DIR)/portable/$(COMPILER)/$(CPU_CORTEX_FAMILY)/*.c)

CORE_FREERTOS_SYS_INCS	:= $(FREERTOS_DIR)/include
CORE_FREERTOS_SYS_INCS	+= $(FREERTOS_DIR)/portable/$(COMPILER)/$(CPU_CORTEX_FAMILY)

# Task stacks are statically defined by FreeRTOS for threads, utilises the Process Stack Pointer
# Stack size defined here is used solely for interrupt processing, utilises the Main Stack Pointer
CFLAGS += -D__STACK_SIZE=4096

##############################################################################
# Compiler Flags
##############################################################################

# C Standards
CFLAGS 			+= -std=gnu99
CFLAGS 			+= -DBUILD_TIMESTAMP=$(BUILD_TIMESTAMP)
CFLAGS			+= -DCOMMIT_HASH=$(COMMIT_HASH)

# Optimisation Flags
ifeq ($(BUILD_MODE),REL)
CFLAGS 			+= -O2
CFLAGS 			+= -DRELEASE_BUILD
else
CFLAGS 			+= -O0
CFLAGS 			+= -g3
LDFLAGS 		+= -g3
endif

# Memory Map
LDFLAGS 		+= -Wl,-Map=$(PROJ_NAME)_$(BUILD_MODE).map

# Stack Usage (Disabled Typically)
# CFLAGS 			+= -c -fdump-rtl-dfinish -fstack-usage

# Output Binary Ordering
CFLAGS  		+= -ffunction-sections -fdata-sections
LDFLAGS 		+= -Wl,--gc-sections,--sort-section=alignment

# Warnings
WARNINGS 		+= -Wall -Wextra -Werror -Wfatal-errors -Wunreachable-code
WARNINGS 		+= -Wwrite-strings -Wcast-align -Wdouble-promotion
WARNINGS 		+= -Wmissing-include-dirs -Wparentheses
WARNINGS	 	+= -Wuninitialized
WARNINGS 		+= -Wreturn-type

# Print final section usage
LDFLAGS 		+= -Wl,--print-memory-usage

# Assembler specific
ASFLAGS 		:= $(CFLAGS)

##############################################################################
# Colours
##############################################################################

BLACK			:= $(shell tput -Txterm setaf 0)
RED				:= $(shell tput -Txterm setaf 1)
GREEN			:= $(shell tput -Txterm setaf 2)
YELLOW			:= $(shell tput -Txterm setaf 3)
WHITE			:= $(shell tput -Txterm setaf 7)
RESET			:= $(shell tput -Txterm sgr0)

##############################################################################
